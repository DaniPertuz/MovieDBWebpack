{"version":3,"file":"bundle.0c2ef4e31c11566d74a0.js","mappings":"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","sources":["webpack://moviedbwebpack/webpack/runtime/chunk loaded","webpack://moviedbwebpack/./src/App.scss?f8ad","webpack://moviedbwebpack/./src/fetch/urls.js","webpack://moviedbwebpack/./src/helpers/fetchData.js","webpack://moviedbwebpack/./src/helpers/search.js","webpack://moviedbwebpack/./src/components/Labels.js","webpack://moviedbwebpack/./src/helpers/genres.js","webpack://moviedbwebpack/./src/types/types.js","webpack://moviedbwebpack/./src/redux/actions/favorites.js","webpack://moviedbwebpack/./src/redux/actions/genders.js","webpack://moviedbwebpack/./src/helpers/years.js","webpack://moviedbwebpack/./src/redux/actions/years.js","webpack://moviedbwebpack/./src/components/MovieItem.js","webpack://moviedbwebpack/./src/components/MoviesList.js","webpack://moviedbwebpack/./src/components/Pagination.js","webpack://moviedbwebpack/./src/components/SearchItem.js","webpack://moviedbwebpack/./src/components/SearchList.js","webpack://moviedbwebpack/./src/components/Movies.js","webpack://moviedbwebpack/./src/components/SerieItem.js","webpack://moviedbwebpack/./src/components/SeriesList.js","webpack://moviedbwebpack/./src/components/Series.js","webpack://moviedbwebpack/./src/components/Header.js","webpack://moviedbwebpack/./src/components/FavoriteItem.js","webpack://moviedbwebpack/./src/components/FavoritesList.js","webpack://moviedbwebpack/./src/components/Favorites.js","webpack://moviedbwebpack/./src/routes/MainRouter.js","webpack://moviedbwebpack/./src/redux/actions/movies.js","webpack://moviedbwebpack/./src/redux/actions/series.js","webpack://moviedbwebpack/./src/components/Main.js","webpack://moviedbwebpack/./src/redux/reducers/GenderReducer.js","webpack://moviedbwebpack/./src/redux/reducers/MovieReducer.js","webpack://moviedbwebpack/./src/redux/reducers/SeriesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/YearsReducer.js","webpack://moviedbwebpack/./src/redux/reducers/rootReducer.js","webpack://moviedbwebpack/./src/redux/store/store.js","webpack://moviedbwebpack/./src/App.js","webpack://moviedbwebpack/./src/index.js","webpack://moviedbwebpack/./src/App.scss?52cd","webpack://moviedbwebpack/webpack/bootstrap","webpack://moviedbwebpack/webpack/runtime/compat get default export","webpack://moviedbwebpack/webpack/runtime/define property getters","webpack://moviedbwebpack/webpack/runtime/global","webpack://moviedbwebpack/webpack/runtime/hasOwnProperty shorthand","webpack://moviedbwebpack/webpack/runtime/publicPath","webpack://moviedbwebpack/webpack/runtime/jsonp chunk loading","webpack://moviedbwebpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\nexport const GET_MOVIES = 'https://api.themoviedb.org/3/movie/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_MOVIES = 'https://api.themoviedb.org/3/genre/movie/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_SERIES = 'https://api.themoviedb.org/3/genre/tv/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SERIES = 'https://api.themoviedb.org/3/tv/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SEARCH = 'https://api.themoviedb.org/3/search/multi?api_key=cc0b90931467ae243564a690969b3b99&language=es&include_adult=false&query=';","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getAllMovies = async () => {\n    let allMovies = [];\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            allMovies.push(movie);\n        }\n    }\n    return allMovies;\n}\n\nexport const getAllSeries = async () => {\n    let allSeries = [];\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            allSeries.push(serie);\n        }\n    }\n    return allSeries;\n}","import axios from 'axios';\nimport { GET_SEARCH } from '../fetch/urls';\n\nexport const searchItems = async (criteria) => {\n    const resp = await axios.get(GET_SEARCH + criteria);\n    const results = await resp.data;\n    return results;\n}","import React from 'react';\n\nexport const Labels = () => {\n    return (\n        <>\n            <h4>Descubra nuevas películas y programas de televisión</h4>\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <label id=\"labelYear\" className=\"labels\" htmlFor=\"comboYear\">\n                        Año\n                    </label>\n                </div>\n                <div className=\"column-2\">\n                    <label id=\"labelGender\" className=\"labels\" htmlFor=\"comboGenre\">\n                        Género\n                    </label>\n                </div>\n            </div>\n        </>\n    )\n}\n","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../fetch/urls';\n\nexport const getGenresMovies = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const getGenresSeries = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_SERIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const settingGenresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k]);\n            }\n        }\n    }\n\n    genders.sort((firstGenre, secondGenre) => { return (firstGenre.name > secondGenre.name) ? 1 : (firstGenre.name < secondGenre.name) ? -1 : 0 });\n\n    const uniques = genders.filter((v, i, a) => a.findIndex(t => (t.id === v.id)) === i);\n\n    return uniques;\n}\n\nexport const genresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie.name);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k].name);\n            }\n        }\n    }\n\n    genders.sort();\n\n    const uniques = genders.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getMovieGenreId = async (name = '') => {\n    let id;\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    for (const movie of movies) {\n        if (movie.name === name) {\n            id = movie.id;\n        }\n    }\n\n    return id;\n}\n\nexport const getSerieGenreId = async (name = '') => {\n    let id;\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    for (const serie of series) {\n        if (serie.name === name) {\n            id = movie.id;\n        } else {\n            id = '';\n        }\n    }\n\n    return id;\n}","\nexport const types = {\n    moviesRead: '[Movies] Read movies',\n    seriesRead: '[Series] Read series',\n    addGenre: '[All] Add genre',\n    allGenresRead: '[All] Read all genres',\n    moviesGenresRead: '[Movies] Read movies genres',\n    seriesGenresRead: '[Series] Read series genres',\n    addYear: '[All] Add year',\n    allYearsRead: '[All] Read all years',\n    moviesYearsRead: '[Years] Read Movies years',\n    seriesYearsRead: '[Years] Read Series years'\n}","import { types } from '../../types/types';\n\nexport const getFavorites = () => {\n    return async () => {\n        try {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n            localStorage.setItem('favorites', JSON.stringify(localFavorites));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const addFavorite = (favorite) => {\n    return async () => {\n        try {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n            const addingLocalFavorite = [...localFavorites, favorite];\n            localStorage.setItem('favorites', JSON.stringify(addingLocalFavorite));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nexport const deleteFavorite = (id) => {\n    return async () => {\n        try {\n            const localFavoritesToDelete = JSON.parse(localStorage.getItem('favorites'));\n            const deleted = localFavoritesToDelete.filter(fav => fav.id !== id);\n            localStorage.setItem('favorites', JSON.stringify(deleted));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../../fetch/urls';\nimport { genresList } from '../../helpers/genres';\nimport { types } from '../../types/types';\n\nexport const getGendersMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_MOVIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersMovies(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersMovies = (genders) => ({\n    type: types.moviesGenresRead,\n    payload: genders\n});\n\nexport const getGendersSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_SERIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersSeries(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersSeries = (genders) => ({\n    type: types.seriesGenresRead,\n    payload: genders\n});\n\nexport const addGenres = (genres) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingGenres(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingGenres = (genres) => ({\n    type: types.addGenre,\n    payload: genres\n});\n\nexport const getAllGenres = () => {\n    return async (dispatch, getState) => {\n        const { genders } = getState();\n        try {\n            const genres = await genresList(genders.allGenres);\n\n            dispatch(loadingAllGenders(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllGenders = (genders) => ({\n    type: types.allGenresRead,\n    payload: genders\n});","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getYearsMovies = async () => {\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            const year = movie.release_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getYearsSeries = async () => {\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            const year = serie.first_air_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const gettingAllYears = (years = []) => {\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}","import { gettingAllYears, getYearsMovies, getYearsSeries } from '../../helpers/years';\nimport { types } from '../../types/types';\n\nexport const getMoviesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsMovies();\n            dispatch(loadingYearsMovies(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsMovies = (years) => ({\n    type: types.moviesYearsRead,\n    payload: years\n});\n\nexport const getSeriesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsSeries();\n            dispatch(loadingYearsSeries(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsSeries = (years) => ({\n    type: types.seriesYearsRead,\n    payload: years\n});\n\nexport const addYears = (years) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingYears(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingYears = (years) => ({\n    type: types.addYear,\n    payload: years\n});\n\nexport const getAllYears = () => {\n    return async (dispatch, getState) => {\n        const { years } = getState();\n        try {\n            const genres = await gettingAllYears(years.allYears);\n\n            dispatch(loadingAllYears(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllYears = (years) => ({\n    type: types.allYearsRead,\n    payload: years\n});","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nimport { getGenresMovies } from '../helpers/genres';\nimport favorite from '../assets/favorite.png';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst MovieItem = ({ id, poster_path, title, overview, vote_average, genre_ids, release_date }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresMovies(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n\n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n        const favorites = JSON.parse(localStorage.getItem('favorites'));\n        const marked = favorites.find(favorite => favorite.id === id);\n        if (marked) {\n            Swal.fire('Lo sentimos', 'Esta película ya fue agregada a favoritos', 'info');\n        } else {\n            dispatch(addFavorite(itemMovie));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(release_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <img className=\"card-img\" src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={title} />\n            <div className=\"card-body\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">{title}</h5>\n                    <h5 className=\"card-subtitle\">{vote_average}</h5>\n                </div>\n                <div className=\"card-subheader\">\n                    <p className=\"card-text-release\">{release_date}</p>\n                    <p className=\"card-text-genres\">{genres}</p>\n                </div>\n                <div className=\"card-text\">\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                </div>\n                <div className=\"card-buttons\">\n                    <button\n                        className=\"button-trailer\"\n                        onClick={getVideo}\n                    >\n                        Ver Trailer\n                    </button>\n                    <button\n                        className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                        onClick={addingFavorite}\n                    >\n                        {(marked === undefined)\n                            ?\n                            \"Agregar a favoritos\"\n                            :\n                            \"Agregado a favoritos\"\n                        }\n                        <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieItem;","import React from 'react';\nimport MovieItem from './MovieItem';\n\nconst MoviesList = ({ movies = [] }) => {\n    return (\n        <>\n            {(movies.length === 0)\n                ?\n                <h3 className=\"text-center\">Cargando películas...</h3>\n                :\n                movies.map((item, index) => (\n                    <MovieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default MoviesList;","import React from 'react';\n\nconst Pagination = ({ pages, nextPage, currentPage }) => {\n\n    const pageLinks = [];\n\n    for (let i = 1; i <= pages + 1; i++) {\n        pageLinks.push(<li key={i} onClick={() => nextPage(i)}><a href=\"\">{i}</a></li>);\n    }\n\n    return (\n        <div className=\"container-pages\">\n            <ul className=\"pagination\">\n                {(currentPage > 1)\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage - 1)}>Anterior</li>\n                    :\n                    <></>\n                }\n\n                {(currentPage < (pages + 1))\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage + 1)}>Siguiente</li>\n                    :\n                    <></>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Pagination;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport favorite from '../assets/favorite.png';\nimport noPoster from '../assets/no-poster.jpeg';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { settingGenresList } from '../helpers/genres';\nimport { addYears } from '../redux/actions/years';\n\nconst SearchItem = ({ id, poster_path, name, title, overview, vote_average, genre_ids, first_air_date, release_date, media_type, known_for }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await settingGenresList(genre_ids);\n        setGenres(resp);\n    }\n\n    const addingFavorite = () => {\n        if (media_type === 'tv') {\n            const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n            dispatch(addFavorite(itemSeries));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(first_air_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n        } else {\n            const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n            dispatch(addFavorite(itemMovie));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(release_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n        }\n    }\n\n    const setVoteAverage = () => {\n        if (!vote_average) {\n            if (known_for) {\n                if (known_for[0]) {\n                    return known_for[0].vote_average;\n                }\n            }\n        }\n    }\n\n    const setImage = () => {\n        if ((poster_path === null) || (poster_path === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    if (known_for[0].poster_path !== undefined) {\n                        return `https://image.tmdb.org/t/p/w500${known_for[0].poster_path}`;\n                    } else {\n                        return noPoster;\n                    }\n                } else {\n                    return noPoster;\n                }\n            } else {\n                return noPoster;\n            }\n        } else {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        }\n    }\n\n    const setDescription = () => {\n        if ((overview === null) || (overview === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    const description = known_for[0].overview;\n                    if (description === \"\") {\n                        return 'Sin descripción';\n                    } else {\n                        return description.substr(0, 199);\n                    }\n                } else {\n                    return 'Sin descripción';\n                }\n            } else {\n                return 'Sin descripción';\n            }\n        } else if (overview === \"\") {\n            return 'Sin descripción'\n        } else {\n            return overview.substr(0, 199);\n        }\n    }\n\n    const setDate = () => {\n        if ((release_date === null) || (release_date === undefined) || (release_date === \"\")\n            && ((first_air_date === null) || (first_air_date === undefined) || (first_air_date === \"\"))) {\n            return 'Sin fecha';\n        } else if ((release_date === null) || (release_date === undefined)) {\n            return first_air_date;\n        } else if ((first_air_date === null) || (first_air_date === undefined)) {\n            return release_date;\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n\n            if (media_type === 'tv') {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n\n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <img className=\"card-img\" src={setImage()} alt={name} />\n            <div className=\"card-body\">\n                <div className=\"card-header\">\n                    {name &&\n                        <h5 className=\"card-title\">{name}</h5>\n                    }\n\n                    {title &&\n                        <h5 className=\"card-title\">{title}</h5>\n                    }\n\n                    <h5 className=\"card-subtitle\">{setVoteAverage()}</h5>\n                </div>\n                <div className=\"card-subheader\">\n                    <p className=\"card-text-release\">{setDate()}</p>\n                    <p className=\"card-text-genres\">{genres}</p>\n                </div>\n                <div className=\"card-text\">\n                    <p className=\"card-text-overview\">{setDescription()}</p>\n                </div>\n                <div className=\"card-buttons\">\n                    <button\n                        className=\"button-trailer\"\n                        onClick={getVideo}\n                    >\n                        Ver Trailer\n                    </button>\n                    <button\n                        className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                        onClick={addingFavorite}\n                    >\n                        {(marked === undefined)\n                            ?\n                            \"Agregar a favoritos\"\n                            :\n                            \"Agregado a favoritos\"\n                        }\n                        <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchItem;","import React, { useEffect, useState } from 'react';\nimport SearchItem from './SearchItem';\n\nexport const SearchList = ({ results = [] }) => {\n    return (\n        <div className=\"items\">\n            {\n                results.map((item, index) => (\n                    <SearchItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_MOVIES } from '../fetch/urls';\nimport { getAllMovies } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport MoviesList from './MoviesList';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\nimport { getMovieGenreId } from '../helpers/genres';\n\nconst Movies = () => {\n\n    const genreRef = useRef();\n\n    const [movies, setMovies] = useState([]);\n\n    const [filtered, setFiltered] = useState([]);\n\n    const [yearFilter, setYearFilter] = useState('');\n\n    const [genreSelected, setGenreSelected] = useState('');\n\n    const [showGenreFilter, setShowGenreFilter] = useState(false);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalMovieResults, setTotalMovieResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [moviesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: moviesList } = useSelector(state => state.movies);\n\n    const { moviesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { moviesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        if (showGenreFilter) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showGenreFilter]);\n\n    useEffect(() => {\n        setMovies(moviesList);\n        setGenders(gendersList);\n        setYears(moviesYears);\n        settingTotalMovieResults();\n        filtering(yearFilter, genreSelected);\n    }, [moviesList, gendersList, moviesYears, yearFilter, genreSelected]);\n\n    const filtering = async (selectedYear, selectedGenre) => {\n        const allMovies = await getAllMovies();\n        const genreID = await getMovieGenreId(selectedGenre);\n\n        if (selectedYear === '' && selectedGenre === '') {\n            setMovies(moviesList);\n            setTotalMovieResults(moviesList.length);\n        } else if ((selectedYear !== '' || selectedYear !== 'Seleccione...') && selectedGenre === '') {\n            let yearFiltered = [];\n\n            for (const movie of allMovies) {\n                if (movie.release_date) {\n                    const year = movie.release_date.substring(0, 4);\n                    if (year === selectedYear) {\n                        yearFiltered.push(movie);\n                    }\n                }\n            }\n\n            setFiltered(yearFiltered);\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        } else if ((selectedYear === '' || selectedYear === 'Seleccione...') && selectedGenre !== '') {\n            let genreFiltered = [];\n\n            for (const movie of allMovies) {\n                const genres = movie.genre_ids;\n                for (const genre of genres) {\n                    if (genreID === genre) {\n                        genreFiltered.push(movie);\n                    }\n                }\n            }\n\n            setFiltered(genreFiltered);\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        } else {\n            let allFiltered = [];\n\n            for (const movie of allMovies) {\n                if (movie.release_date) {\n                    const genres = movie.genre_ids;\n                    for (const genre of genres) {\n                        if ((genreID === genre) && (movie.release_date.substring(0, 4) === selectedYear)) {\n                            allFiltered.push(movie);\n                        }\n                    }\n                }\n            }\n\n            setFiltered(allFiltered);\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const filterByGenre = (e) => {\n        setGenreSelected(e.target.value);\n        setShowGenreFilter(false);\n    }\n\n    const filterByYear = (e) => {\n        setYearFilter(e.target.value);\n    }\n\n    const handleShowGenreFilter = () => {\n        setShowGenreFilter(true);\n    }\n\n    const handleHideGenreFilter = () => {\n        setShowGenreFilter(false);\n    }\n\n    const handleClickOutside = (event) => {\n        if (genreRef.current && genreRef.current.contains(event.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        setShowGenreFilter(false);\n    };\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalMovieResults = async () => {\n        const next = await axios.get(GET_MOVIES);\n        const data = await next.data.total_pages;\n        setTotalMovieResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_MOVIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setMovies(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalMovieResults / moviesPerPage);\n    const last = currentPage * moviesPerPage;\n    const first = last - moviesPerPage;\n    const currentMovies = (filtered.length !== 0) ? filtered.slice(first, last) : movies;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"search\"\n                    placeholder=\"Search for a movie, series and videos\"\n                    onChange={getSearch}\n                />\n            </div>\n            {\n                (totalResults > 0) &&\n                <h3 className=\"results\">{totalResults} coincidencias</h3>\n            }\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <input\n                                    id=\"inputGenre\"\n                                    type=\"search\"\n                                    name=\"genre\"\n                                    className=\"selects\"\n                                    placeholder=\"Filtrar por...\"\n                                    autoComplete=\"off\"\n                                    onChange={filterByGenre}\n                                    value={genreSelected}\n                                    onFocus={handleShowGenreFilter}\n                                />\n                                {showGenreFilter &&\n                                    <div id=\"listGenres\" ref={genreRef}>\n                                        <ul>\n                                            <li\n                                                key={0}\n                                                onClick={() => {\n                                                    setGenreSelected('');\n                                                    handleHideGenreFilter();\n                                                }}>\n                                                All\n                                            </li>\n                                            {genders.map((genre, index) => (\n                                                <li\n                                                    key={index}\n                                                    name=\"genre\"\n                                                    onClick={() => {\n                                                        setGenreSelected(genre.name);\n                                                        handleHideGenreFilter();\n                                                    }}\n                                                >\n                                                    {genre.name}\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"items\">\n                            {(filtered.length !== 0)\n                                ?\n                                <MoviesList movies={currentMovies} />\n                                :\n                                <MoviesList movies={movies} />\n                            }\n                        </div>\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalMovieResults >= moviesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n\n        </>\n    )\n}\n\nexport default Movies;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport favorite from '../assets/favorite.png';\nimport noPoster from '../assets/no-poster.jpeg';\nimport { getGenresSeries } from '../helpers/genres';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst SerieItem = ({ id, poster_path, name, overview, vote_average, genre_ids, first_air_date }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresSeries(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n\n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n        if (marked) {\n            Swal.fire('Lo sentimos', 'Esta película ya fue agregada a favoritos', 'error');\n        } else {\n            dispatch(addFavorite(itemSeries));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(first_air_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n        }\n    }\n\n    return (\n            <div className=\"card\">\n                {poster_path\n                    ?\n                    <img className=\"card-img\" src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                    :\n                    <img className=\"card-img\" src={noPoster} alt={name} />\n                }\n                <div className=\"card-body\">\n                    <div className=\"card-header\">\n                        <h5 className=\"card-title\">{name}</h5>\n                        <h5 className=\"card-subtitle\">{vote_average}</h5>\n                    </div>\n                    <div className=\"card-subheader\">\n                        <p className=\"card-text-release\">{first_air_date}</p>\n                        {(genres === \"\")\n                            ?\n                            <p className=\"card-text-genres\">{\"Sin género\"}</p>\n                            :\n                            <p className=\"card-text-genres\">{genres}</p>\n                        }\n                    </div>\n                    <div className=\"card-text\">\n                        {(overview === \"\")\n                            ?\n                            <p className=\"card-text-overview\">{\"Sin descripción\"}</p>\n                            :\n                            <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                        }\n                    </div>\n                    <div className=\"card-buttons\">\n                        <button\n                            className=\"button-trailer\"\n                            onClick={getVideo}\n                        >\n                            Ver Trailer\n                        </button>\n                        <button\n                            className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                            onClick={addingFavorite}\n                        >\n                            {(marked === undefined)\n                                ?\n                                \"Agregar a favoritos\"\n                                :\n                                \"Agregado a favoritos\"\n                            }\n                            <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default SerieItem;","import React from 'react';\nimport SerieItem from './SerieItem';\n\nconst SeriesList = ({ series = [] }) => {\n    return (\n        <>\n            {(series.length === 0)\n                ?\n                <h3 className=\"text-center\">Cargando series...</h3>\n                :\n                series.map((item, index) => (\n                    <SerieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default SeriesList;","import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_SERIES } from '../fetch/urls';\nimport { getAllSeries } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\nimport SeriesList from './SeriesList';\nimport { getSerieGenreId } from '../helpers/genres';\n\nconst Series = () => {\n\n    const genreRef = useRef();\n\n    const [series, setSeries] = useState([]);\n\n    const [filtered, setFiltered] = useState([]);\n\n    const [yearFilter, setYearFilter] = useState('');\n\n    const [showGenreFilter, setShowGenreFilter] = useState(false);\n\n    const [genreSelected, setGenreSelected] = useState('');\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalSeriesResults, setTotalSeriesResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [seriesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: seriesList } = useSelector(state => state.series);\n\n    const { seriesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { seriesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        if (showGenreFilter) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showGenreFilter]);\n\n    useEffect(() => {\n        setSeries(seriesList);\n        setGenders(gendersList);\n        setYears(seriesYears);\n        settingTotalSeriesResults();\n        filtering(yearFilter, genreSelected);\n    }, [seriesList, gendersList, seriesYears, yearFilter, genreSelected]);\n\n    const filtering = async (selectedYear, selectedGenre) => {\n        const allSeries = await getAllSeries();\n        const genreID = await getSerieGenreId(selectedGenre);\n\n        if (selectedYear === '' && selectedGenre === '') {\n            setSeries(seriesList);\n            settingTotalSeriesResults(seriesList.length);\n        } else if ((selectedYear !== '' || selectedYear !== 'Seleccione...') && selectedGenre === '') {\n            let yearFiltered = [];\n\n            for (const serie of allSeries) {\n                if (serie.first_air_date) {\n                    const year = serie.first_air_date.substring(0, 4);\n                    if (year === selectedYear) {\n                        yearFiltered.push(serie);\n                    }\n                }\n            }\n\n            setFiltered(yearFiltered);\n            setSeries(filtered);\n            settingTotalSeriesResults(filtered.length);\n        } else if ((selectedYear === '' || selectedYear === 'Seleccione...') && selectedGenre !== '') {\n            let genreFiltered = [];\n\n            for (const serie of allSeries) {\n                const genres = serie.genre_ids;\n                for (const genre of genres) {\n                    if (genreID === genre) {\n                        genreFiltered.push(serie);\n                    }\n                }\n            }\n\n            setFiltered(genreFiltered);\n            setSeries(filtered);\n            settingTotalSeriesResults(filtered.length);\n        } else {\n            let allFiltered = [];\n\n            for (const serie of allSeries) {\n                if (serie.first_air_date) {\n                    const genres = serie.genre_ids;\n                    for (const genre of genres) {\n                        if ((genreID === genre) && (serie.first_air_date.substring(0, 4) === selectedYear)) {\n                            allFiltered.push(serie);\n                        }\n                    }\n                }\n            }\n\n            setFiltered(allFiltered);\n            setSeries(filtered);\n            settingTotalSeriesResults(filtered.length);\n        }\n    }\n\n    const filterByGenre = (e) => {\n        setGenreSelected(e.target.value);\n    }\n\n    const filterByYear = (e) => {\n        setYearFilter(e.target.value);\n    }\n\n    const handleShowGenreFilter = () => {\n        setShowGenreFilter(true);\n    }\n\n    const handleHideGenreFilter = () => {\n        setShowGenreFilter(false);\n    }\n\n    const handleClickOutside = (event) => {\n        if (genreRef.current && genreRef.current.contains(event.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        setShowGenreFilter(false);\n    };\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalSeriesResults = async () => {\n        const next = await axios.get(GET_SERIES);\n        const data = await next.data.total_pages;\n        setTotalSeriesResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_SERIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setSeries(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalSeriesResults / seriesPerPage);\n    const last = currentPage * seriesPerPage;\n    const first = last - seriesPerPage;\n    const currentSeries = (filtered.length !== 0) ? filtered.slice(first, last) : series;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"search\"\n                    placeholder=\"Search for a movie, series and videos\"\n                    onChange={getSearch}\n                />\n            </div>\n            {\n                (totalResults > 0) &&\n                <h3 className=\"results\">{totalResults} coincidencias</h3>\n            }\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <input\n                                    id=\"inputGenre\"\n                                    type=\"search\"\n                                    name=\"genre\"\n                                    className=\"selects\"\n                                    placeholder=\"Filtrar por...\"\n                                    autoComplete=\"off\"\n                                    onChange={filterByGenre}\n                                    value={genreSelected}\n                                    onFocus={handleShowGenreFilter}\n                                />\n                                {showGenreFilter &&\n                                    <div id=\"listGenres\">\n                                        <ul>\n                                            <li\n                                                key={0}\n                                                onClick={() => {\n                                                    setGenreSelected('');\n                                                    handleHideGenreFilter();\n                                                }}>\n                                                All\n                                            </li>\n                                            {genders.map((genre, index) => (\n                                                <li\n                                                    key={index}\n                                                    name=\"genre\"\n                                                    onClick={() => {\n                                                        setGenreSelected(genre.name);\n                                                        handleHideGenreFilter();\n                                                    }}\n                                                >\n                                                    {genre.name}\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"items\">\n                            {(filtered.length !== 0)\n                                ?\n                                <SeriesList series={currentSeries} />\n                                :\n                                <SeriesList series={series} />\n                            }\n                        </div>\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalSeriesResults >= seriesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n        </>\n    )\n}\n\nexport default Series;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport logo from '../assets/logo.png';\n\nconst Header = () => {\n\n    const history = useHistory();\n\n    const [location, setLocation] = useState('');\n\n    const setActive = (pathname) => {\n        setLocation(pathname);\n    }\n\n    return (\n        <header className=\"container-fluid bg-white\">\n            <div className=\"content\">\n                <img id=\"logo\" src={logo} alt=\"Logo\" />\n                <h1 id=\"title\">Showapp</h1>\n            </div>\n            <nav>\n                <ul>\n                    <li>\n                        <button\n                            className={(location === '/') ? \"visited\" : \"links\"}\n                            onClick={() => {\n                                if (location === '/') {\n                                    history.go('/');\n                                }\n                                history.replace('/');\n                                setActive('/');\n                            }}>\n                            Movies\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            className={(location === '/series') ? \"visited\" : \"links\"}\n                            onClick={() => {\n                                if (location === '/series') {\n                                    history.go('/series');\n                                }\n                                history.replace('/series');\n                                setActive('/series');\n                            }}>\n                            Series\n                        </button>\n                    </li>\n                    <li>\n                        <button className={(location === '/favorites') ? \"visited\" : \"links\"}\n                            onClick={() => {\n                                if (location === '/favorites') {\n                                    history.go('/favorites');\n                                }\n                                history.replace('/favorites');\n                                setActive('/favorites');\n                            }}>\n                            Favoritos\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { deleteFavorite } from '../redux/actions/favorites';\nimport favorite from '../assets/favorite.png';\nimport { getGenresMovies, getGenresSeries } from '../helpers/genres';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst FavoriteItem = ({ id, poster_path, title, name, overview, vote_average, genre_ids, first_air_date, release_date, media_type }) => {\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [dispatch, genre_ids]);\n\n    const settingGenres = async () => {\n        let genresMovie, genresSerie;\n        genresMovie = await getGenresMovies(genre_ids);\n        genresSerie = await getGenresSeries(genre_ids);\n\n        if (title) {\n            setGenres(genresMovie);\n        } else {\n            setGenres(genresSerie);\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n\n            if (name) {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n\n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    const removeFavorite = () => {\n        dispatch(deleteFavorite(id));\n        history.replace('/');\n        Swal.fire('Borrado', 'Elemento eliminado de favoritos', 'success');\n    }\n\n    return (\n        <div className=\"card\">\n            <img className=\"card-img\" src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n            <div className=\"card-body\">\n                <div className=\"card-header\">\n                    {name &&\n                        <h5 className=\"card-title\">{name}</h5>\n                    }\n                    {title &&\n                        <h5 className=\"card-title\">{title}</h5>\n                    }\n                    <h5 className=\"card-subtitle\">{vote_average}</h5>\n                </div>\n                <div className=\"card-subheader\">\n                    {first_air_date &&\n                        <p className=\"card-text-release\">{first_air_date}</p>\n                    }\n                    {release_date &&\n                        <p className=\"card-text-release\">{release_date}</p>\n                    }\n                    <p className=\"card-text-genres\">{genres}</p>\n                </div>\n                <div className=\"card-text\">\n                    {overview\n                        ?\n                        <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                        :\n                        <p className=\"card-text-overview\">Sin descripción</p>\n                    }\n                </div>\n                <div className=\"card-buttons\">\n                    <button\n                        className=\"button-trailer\"\n                        onClick={getVideo}\n                    >\n                        Ver Trailer\n                    </button>\n                    <button\n                        className=\"button-favorite\"\n                        onClick={removeFavorite}\n                    >\n                        Eliminar favorito\n                        <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteItem;","import React from 'react';\nimport FavoriteItem from './FavoriteItem';\n\nconst FavoritesList = ({ favorites = [] }) => {\n    return (\n        <>\n            {\n                favorites.map((item, index) => (\n                    <FavoriteItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n\nexport default FavoritesList;","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovieGenreId, getSerieGenreId, settingGenresList } from '../helpers/genres';\n\nimport FavoritesList from './FavoritesList';\nimport { Labels } from './Labels';\n\nconst Favorites = () => {\n\n    const genreRef = useRef();\n\n    const dispatch = useDispatch();\n\n    const [favorites, setFavorites] = useState([]);\n\n    const [filtered, setFiltered] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [yearFilter, setYearFilter] = useState('');\n\n    const [genreSelected, setGenreSelected] = useState('');\n\n    const [showGenreFilter, setShowGenreFilter] = useState(false);\n\n    const { allYears } = useSelector(state => state.years);\n\n    const { allGenres: gendersList } = useSelector(state => state.genders);\n\n    const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n\n    useEffect(() => {\n        if (showGenreFilter) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showGenreFilter]);\n\n    useEffect(() => {\n        if (localFavorites === null) {\n            setFavorites([]);\n        } else {\n            setFavorites(localFavorites);\n        }\n    }, []);\n\n    useEffect(() => {\n        setYears(allYears);\n        settingGenres();\n        filtering(yearFilter, genreSelected);\n    }, [dispatch, gendersList, yearFilter, genreSelected]);\n\n    const settingGenres = async () => {\n        const genres = await settingGenresList(gendersList);\n        setGenders(genres);\n    }\n\n    const handleShowGenreFilter = () => {\n        setShowGenreFilter(true);\n    }\n\n    const handleHideGenreFilter = () => {\n        setShowGenreFilter(false);\n    }\n\n    const handleClickOutside = (event) => {\n        if (genreRef.current && genreRef.current.contains(event.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        setShowGenreFilter(false);\n    };\n\n    const filtering = async (selectedYear, selectedGenre) => {\n        const movieGenreID = await getMovieGenreId(selectedGenre);\n        const serieGenreID = await getSerieGenreId(selectedGenre);\n\n        if (selectedYear === '' && selectedGenre === '') {\n            setFavorites(localFavorites);\n        } else if ((selectedYear !== '' || selectedYear !== 'Seleccione...') && selectedGenre === '') {\n            let yearFiltered = [];\n\n            for (const favorite of favorites) {\n                if (favorite.release_date) {\n                    const yearRelease = favorite.release_date.substring(0, 4);\n                    if (yearRelease === selectedYear) {\n                        yearFiltered.push(favorite);\n                    }\n                } else if (favorite.first_air_date) {\n                    const yearAirDate = favorite.first_air_date.substring(0, 4);\n                    if (yearAirDate === selectedYear) {\n                        yearFiltered.push(favorite);\n                    }\n                }\n            }\n\n            setFiltered(yearFiltered);\n            setFavorites(filtered);\n            setTotalMovieResults(filtered.length);\n        } else if ((selectedYear === '' || selectedYear === 'Seleccione...') && selectedGenre !== '') {\n            let genreFiltered = [];\n            for (const favorite of favorites) {\n                const genres = favorite.genre_ids;\n                for (const genre of genres) {\n                    if ((movieGenreID === genre) || (serieGenreID === genre)) {\n                        genreFiltered.push(favorite);\n                    }\n                }\n            }\n\n            setFiltered(genreFiltered);\n            setFavorites(filtered);\n            setTotalMovieResults(filtered.length);\n        } else {\n            let allFiltered = [];\n\n            for (const favorite of favorites) {\n                if (favorite.release_date) {\n                    const yearRelease = favorite.release_date.substring(0, 4);\n                    const genres = favorite.genre_ids;\n                    for (const genre of genres) {\n                        if ((movieGenreID === genre) && (yearRelease === selectedYear)) {\n                            allFiltered.push(favorite);\n                        }\n                    }\n                } else if (favorite.first_air_date) {\n                    const yearAirDate = favorite.first_air_date.substring(0, 4);\n                    const genres = favorite.genre_ids;\n                    for (const genre of genres) {\n                        if ((serieGenreID === genre) && (yearAirDate === selectedYear)) {\n                            allFiltered.push(favorite);\n                        }\n                    }\n                }\n            }\n\n            setFiltered(allFiltered);\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const filterByGenre = (e) => {\n        setGenreSelected(e.target.value);\n    }\n\n    const filterByYear = (e) => {\n        setYearFilter(e.target.value);\n    }\n\n    return (\n        <>\n            <Labels />\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboYear\"\n                        name=\"year\"\n                        className=\"selects\"\n                        onChange={filterByYear}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {years.map((year, index) => (\n                            <option key={index} value={year}>\n                                {year}\n                            </option>\n                        ))\n                        }\n                    </select>\n                </div>\n                <div className=\"column-2\">\n                    <input\n                        id=\"inputGenre\"\n                        type=\"search\"\n                        name=\"genre\"\n                        className=\"selects\"\n                        placeholder=\"Filtrar por...\"\n                        autoComplete=\"off\"\n                        onChange={filterByGenre}\n                        value={genreSelected}\n                        onFocus={handleShowGenreFilter}\n                    />\n                    {showGenreFilter &&\n                        <div id=\"listGenres\">\n                            <ul>\n                                {genders.map((genre, index) => (\n                                    <li\n                                        key={index}\n                                        name=\"genre\"\n                                        onClick={() => {\n                                            setGenreSelected(genre.name);\n                                            handleHideGenreFilter();\n                                        }}\n\n                                    >\n                                        {genre.name}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    }\n                </div>\n            </div>\n            {(favorites.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay items marcado como favoritos todavía</h3>\n                :\n                <div className=\"items\">\n                    <FavoritesList favorites={favorites} />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Favorites;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Movies from '../components/Movies';\nimport Series from '../components/Series';\nimport Header from '../components/Header';\nimport Favorites from '../components/Favorites';\n\nconst MainRouter = () => {\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={Movies}\n                />\n                <Route\n                    exact path=\"/series\"\n                    component={Series}\n                />\n                <Route\n                    exact path=\"/favorites\"\n                    component={Favorites}\n                />\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default MainRouter;","import axios from 'axios';\nimport { GET_MOVIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_MOVIES);\n            const movies = await resp.data.results;\n            dispatch(loadingMovies(movies));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingMovies = (movies) => ({\n    type: types.moviesRead,\n    payload: movies\n});","import axios from 'axios';\nimport { GET_SERIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_SERIES);\n            const series = await resp.data.results;\n            dispatch(loadingSeries(series));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingSeries = (series) => ({\n    type: types.seriesRead,\n    payload: series\n});","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport MainRouter from '../routes/MainRouter';\nimport { getMovies } from '../redux/actions/movies';\nimport { getAllGenres, getGendersMovies, getGendersSeries } from '../redux/actions/genders';\nimport { getSeries } from '../redux/actions/series';\nimport { getFavorites } from '../redux/actions/favorites';\nimport { getAllYears, getMoviesYears, getSeriesYears } from '../redux/actions/years';\n\nconst Main = () => {\n\n    localStorage.setItem('favorites', JSON.stringify([]));\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getMovies());\n        dispatch(getSeries());\n        dispatch(getGendersMovies());\n        dispatch(getGendersSeries());\n        dispatch(getAllGenres());\n        dispatch(getAllYears());\n        dispatch(getFavorites());\n        dispatch(getMoviesYears());\n        dispatch(getSeriesYears());\n    }, [dispatch]);\n\n    return (\n        <MainRouter />\n    )\n}\n\nexport default Main;","import { types } from '../../types/types';\n\nconst initialState = { moviesGenres: [], seriesGenres: [], allGenres: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesGenresRead:\n            return {\n                ...state,\n                moviesGenres: [...payload]\n            }\n\n        case types.seriesGenresRead:\n            return {\n                ...state,\n                seriesGenres: [...payload]\n            }\n        \n        case types.addGenre: {\n            return {\n                ...state,\n                allGenres: [...state.allGenres, payload]\n            }\n        }\n\n        case types.allGenresRead:\n            return {\n                ...state,\n                allGenres: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.moviesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.seriesRead:\n        return {\n            ...state,\n            data: [...payload]\n        }\n\n    default:\n        return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { moviesYears: [], seriesYears: [], allYears: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesYearsRead:\n            return {\n                ...state,\n                moviesYears: [...payload]\n            }\n        case types.seriesYearsRead:\n            return {\n                ...state,\n                seriesYears: [...payload]\n            }\n\n        case types.allYearsRead:\n            return {\n                ...state,\n                allYears: [...payload]\n            }\n\n        case types.addYear: {\n            return {\n                ...state,\n                allYears: [...state.allYears, payload]\n            }\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport GenderReducer from './GenderReducer';\nimport MovieReducer from './MovieReducer';\nimport SeriesReducer from './SeriesReducer';\nimport YearsReducer from './YearsReducer';\n\nexport const rootReducer = combineReducers({\n    movies: MovieReducer,\n    series: SeriesReducer,\n    genders: GenderReducer,\n    years: YearsReducer\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { Provider } from 'react-redux';\nimport './App.scss';\nimport Main from './components/Main';\nimport { store } from './redux/store/store';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"app\">\n                <Main />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoviedbwebpack\"] = self[\"webpackChunkmoviedbwebpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [478], function() { return __webpack_require__(4590); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","GET_MOVIES","GET_GENRES_MOVIES","GET_GENRES_SERIES","GET_SERIES","getAllMovies","allMovies","axios","resp","data","total_pages","i","response","results","movies","movie","push","getAllSeries","allSeries","series","serie","searchItems","criteria","Labels","className","id","htmlFor","getGenresMovies","genres","body","genders","length","j","idGender","name","join","getGenresSeries","settingGenresList","allGenres","sort","uniqueGenres","filter","v","a","indexOf","allGenresList","item","element","genre","k","firstGenre","secondGenre","uniques","findIndex","t","genresList","getMovieGenreId","getSerieGenreId","types","addFavorite","favorite","localFavorites","JSON","parse","localStorage","getItem","addingLocalFavorite","setItem","stringify","error","console","loadingGendersMovies","type","payload","loadingGendersSeries","addGenres","dispatch","addingGenres","log","loadingAllGenders","getYearsMovies","years","year","release_date","undefined","onlyYear","substring","reverse","getYearsSeries","first_air_date","gettingAllYears","loadingYearsMovies","loadingYearsSeries","addYears","addingYears","loadingAllYears","poster_path","title","overview","vote_average","genre_ids","useDispatch","useState","setGenres","marked","find","useEffect","settingGenres","getVideo","url","result","site","Swal","html","key","src","alt","substr","onClick","itemMovie","map","index","pages","nextPage","currentPage","pageLinks","href","media_type","known_for","noPoster","setVoteAverage","description","setDescription","SearchList","genreRef","useRef","setMovies","filtered","setFiltered","yearFilter","setYearFilter","genreSelected","setGenreSelected","showGenreFilter","setShowGenreFilter","setGenders","setYears","totalResults","setTotalResults","totalMovieResults","setTotalMovieResults","setCurrentPage","moviesPerPage","setResults","moviesList","useSelector","state","gendersList","moviesGenres","moviesYears","document","addEventListener","handleClickOutside","removeEventListener","settingTotalMovieResults","filtering","selectedYear","selectedGenre","genreID","allFiltered","genreFiltered","yearFiltered","handleHideGenreFilter","event","current","contains","target","getSearch","e","values","value","total_results","next","pageNumber","numberPages","Math","floor","last","first","currentMovies","slice","placeholder","onChange","defaultValue","autoComplete","onFocus","ref","style","clear","itemSeries","setSeries","totalSeriesResults","setTotalSeriesResults","seriesPerPage","seriesList","seriesGenres","seriesYears","settingTotalSeriesResults","currentSeries","history","useHistory","location","setLocation","setActive","pathname","logo","go","replace","genresMovie","genresSerie","localFavoritesToDelete","deleted","fav","deleteFavorite","favorites","setFavorites","allYears","movieGenreID","serieGenreID","yearRelease","yearAirDate","exact","path","component","Movies","Series","Favorites","to","loadingMovies","loadingSeries","getState","initialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}