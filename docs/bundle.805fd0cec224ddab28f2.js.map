{"version":3,"file":"bundle.805fd0cec224ddab28f2.js","mappings":"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","sources":["webpack://moviedbwebpack/webpack/runtime/chunk loaded","webpack://moviedbwebpack/./src/App.scss?f8ad","webpack://moviedbwebpack/./src/fetch/urls.js","webpack://moviedbwebpack/./src/helpers/fetchData.js","webpack://moviedbwebpack/./src/helpers/search.js","webpack://moviedbwebpack/./src/components/Labels.js","webpack://moviedbwebpack/./src/helpers/genres.js","webpack://moviedbwebpack/./src/types/types.js","webpack://moviedbwebpack/./src/redux/actions/favorites.js","webpack://moviedbwebpack/./src/redux/actions/genders.js","webpack://moviedbwebpack/./src/helpers/years.js","webpack://moviedbwebpack/./src/redux/actions/years.js","webpack://moviedbwebpack/./src/components/MovieItem.js","webpack://moviedbwebpack/./src/components/MoviesList.js","webpack://moviedbwebpack/./src/components/Pagination.js","webpack://moviedbwebpack/./src/components/SearchItem.js","webpack://moviedbwebpack/./src/components/SearchList.js","webpack://moviedbwebpack/./src/components/Movies.js","webpack://moviedbwebpack/./src/components/SerieItem.js","webpack://moviedbwebpack/./src/components/SeriesList.js","webpack://moviedbwebpack/./src/components/Series.js","webpack://moviedbwebpack/./src/components/Header.js","webpack://moviedbwebpack/./src/components/FavoriteItem.js","webpack://moviedbwebpack/./src/components/FavoritesList.js","webpack://moviedbwebpack/./src/components/Favorites.js","webpack://moviedbwebpack/./src/routes/MainRouter.js","webpack://moviedbwebpack/./src/redux/actions/movies.js","webpack://moviedbwebpack/./src/redux/actions/series.js","webpack://moviedbwebpack/./src/components/Main.js","webpack://moviedbwebpack/./src/redux/reducers/FavoritesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/GenderReducer.js","webpack://moviedbwebpack/./src/redux/reducers/MovieReducer.js","webpack://moviedbwebpack/./src/redux/reducers/SeriesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/YearsReducer.js","webpack://moviedbwebpack/./src/redux/reducers/rootReducer.js","webpack://moviedbwebpack/./src/redux/store/store.js","webpack://moviedbwebpack/./src/App.js","webpack://moviedbwebpack/./src/index.js","webpack://moviedbwebpack/./src/App.scss?52cd","webpack://moviedbwebpack/webpack/bootstrap","webpack://moviedbwebpack/webpack/runtime/compat get default export","webpack://moviedbwebpack/webpack/runtime/define property getters","webpack://moviedbwebpack/webpack/runtime/global","webpack://moviedbwebpack/webpack/runtime/hasOwnProperty shorthand","webpack://moviedbwebpack/webpack/runtime/publicPath","webpack://moviedbwebpack/webpack/runtime/jsonp chunk loading","webpack://moviedbwebpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\nexport const GET_MOVIES = 'https://api.themoviedb.org/3/movie/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_MOVIES = 'https://api.themoviedb.org/3/genre/movie/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_SERIES = 'https://api.themoviedb.org/3/genre/tv/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SERIES = 'https://api.themoviedb.org/3/tv/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SEARCH = 'https://api.themoviedb.org/3/search/multi?api_key=cc0b90931467ae243564a690969b3b99&language=es&include_adult=false&query=';","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getAllMovies = async () => {\n    let allMovies = [];\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            allMovies.push(movie);\n        }\n    }\n    return allMovies;\n}\n\nexport const getAllSeries = async () => {\n    let allSeries = [];\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            allSeries.push(serie);\n        }\n    }\n    return allSeries;\n}","import axios from 'axios';\nimport { GET_SEARCH } from '../fetch/urls';\n\nexport const searchItems = async (criteria) => {\n    const resp = await axios.get(GET_SEARCH + criteria);\n    const results = await resp.data;\n    return results;\n}","import React from 'react';\n\nexport const Labels = () => {\n    return (\n        <>\n            <h4>Descubra nuevas películas y programas de televisión</h4>\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <label id=\"labelYear\" className=\"labels\" htmlFor=\"comboYear\">\n                        Año\n                    </label>\n                </div>\n                <div className=\"column-2\">\n                    <label id=\"labelGender\" className=\"labels\" htmlFor=\"comboGenre\">\n                        Género\n                    </label>\n                </div>\n            </div>\n        </>\n    )\n}\n","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../fetch/urls';\n\nexport const getGenresMovies = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const getGenresSeries = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_SERIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const settingGenresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k]);\n            }\n        }\n    }\n\n    genders.sort((firstGenre, secondGenre) => { return (firstGenre.name > secondGenre.name) ? 1 : (firstGenre.name < secondGenre.name) ? -1 : 0 });\n\n    const uniques = genders.filter((v, i, a) => a.findIndex(t => (t.id === v.id)) === i);\n\n    return uniques;\n}\n\nexport const genresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie.name);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k].name);\n            }\n        }\n    }\n\n    genders.sort();\n\n    const uniques = genders.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}","\nexport const types = {\n    moviesRead: '[Movies] Read movies',\n    seriesRead: '[Series] Read series',\n    favoritesRead: '[Favorites] Read favorites',\n    favoritesAdd: '[Favorites] Add favorites',\n    favoritesDelete: '[Favorites] Delete favorites',\n    addGenre: '[All] Add genre',\n    allGenresRead: '[All] Read all genres',\n    moviesGenresRead: '[Movies] Read movies genres',\n    seriesGenresRead: '[Series] Read series genres',\n    addYear: '[All] Add year',\n    allYearsRead: '[All] Read all years',\n    moviesYearsRead: '[Years] Read Movies years',\n    seriesYearsRead: '[Years] Read Series years'\n}","import { types } from '../../types/types';\n\nexport const getFavorites = () => {\n    return async (dispatch, getState) => {\n        try {\n            const { favorites } = getState();\n            dispatch(loadingFavorites(favorites.data));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingFavorites = (favorites) => ({\n    type: types.favoritesRead,\n    payload: favorites\n});\n\nexport const addFavorite = (favorite) => {\n    return async (dispatch) => {\n        try {\n            dispatch(favoriteAddNew(favorite));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst favoriteAddNew = (favorite) => ({\n    type: types.favoritesAdd,\n    payload: favorite\n});\n\nexport const deleteFavorite = (id) => {\n    return async (dispatch) => {\n        try {\n            dispatch(favoriteDeleting(id));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst favoriteDeleting = (id) => ({\n    type: types.favoritesDelete,\n    payload: id\n});","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../../fetch/urls';\nimport { genresList } from '../../helpers/genres';\nimport { types } from '../../types/types';\n\nexport const getGendersMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_MOVIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersMovies(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersMovies = (genders) => ({\n    type: types.moviesGenresRead,\n    payload: genders\n});\n\nexport const getGendersSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_SERIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersSeries(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersSeries = (genders) => ({\n    type: types.seriesGenresRead,\n    payload: genders\n});\n\nexport const addGenres = (genres) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingGenres(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingGenres = (genres) => ({\n    type: types.addGenre,\n    payload: genres\n});\n\nexport const getAllGenres = () => {\n    return async (dispatch, getState) => {\n        const { genders } = getState();\n        try {\n            const genres = await genresList(genders.allGenres);\n\n            dispatch(loadingAllGenders(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllGenders = (genders) => ({\n    type: types.allGenresRead,\n    payload: genders\n});","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getYearsMovies = async () => {\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            const year = movie.release_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getYearsSeries = async () => {\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            const year = serie.first_air_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const gettingAllYears = (years = []) => {\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}","import { gettingAllYears, getYearsMovies, getYearsSeries } from '../../helpers/years';\nimport { types } from '../../types/types';\n\nexport const getMoviesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsMovies();\n            dispatch(loadingYearsMovies(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsMovies = (years) => ({\n    type: types.moviesYearsRead,\n    payload: years\n});\n\nexport const getSeriesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsSeries();\n            dispatch(loadingYearsSeries(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsSeries = (years) => ({\n    type: types.seriesYearsRead,\n    payload: years\n});\n\nexport const addYears = (years) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingYears(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingYears = (years) => ({\n    type: types.addYear,\n    payload: years\n});\n\nexport const getAllYears = () => {\n    return async (dispatch, getState) => {\n        const { years } = getState();\n        try {\n            const genres = await gettingAllYears(years.allYears);\n\n            dispatch(loadingAllYears(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllYears = (years) => ({\n    type: types.allYearsRead,\n    payload: years\n});","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nimport { getGenresMovies } from '../helpers/genres';\nimport favorite from '../assets/favorite.png';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst MovieItem = ({ id, poster_path, title, overview, vote_average, genre_ids, release_date }) => {\n\n    const dispatch = useDispatch();\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresMovies(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n        \n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n        \n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n        dispatch(addFavorite(itemMovie));\n        dispatch(addGenres(genre_ids));\n        dispatch(addYears(release_date.substring(0, 4)));\n        Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={title} />\n                <h5 className=\"card-title\">{title}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{release_date}</p>\n                <p className=\"card-text-genres\">{genres}</p>\n                <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={addingFavorite}\n                >\n                    Agregar a favoritos\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieItem;","import React from 'react';\nimport MovieItem from './MovieItem';\n\nconst MoviesList = ({ movies = [] }) => {\n    return (\n        <>\n            {(movies.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay películas</h3>\n                :\n                movies.map((item, index) => (\n                    <MovieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default MoviesList;","import React from 'react';\n\nconst Pagination = ({ pages, nextPage, currentPage }) => {\n\n    const pageLinks = [];\n\n    for (let i = 1; i <= pages + 1; i++) {\n        pageLinks.push(<li key={i} onClick={() => nextPage(i)}><a href=\"\">{i}</a></li>);\n    }\n\n    return (\n        <div className=\"container-pages\">\n            <ul className=\"pagination\">\n                {(currentPage > 1)\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage - 1)}>Anterior</li>\n                    :\n                    <></>\n                }\n\n                {(currentPage < (pages + 1))\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage + 1)}>Siguiente</li>\n                    :\n                    <></>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Pagination;","import React, { useEffect, useState } from 'react';\nimport { getGenres } from '../helpers/genres';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport favorite from '../assets/favorite.png';\n\nimport noPoster from '../assets/no-poster.jpeg';\nimport { useDispatch } from 'react-redux';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\n\nconst SearchItem = ({ id, poster_path, name, title, overview, vote_average, genre_ids, first_air_date, release_date, media_type, known_for }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresSeries(genre_ids);\n        setGenres(resp);\n    }\n\n    const addingFavorite = () => {\n        if (media_type === 'tv') {\n            const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n            dispatch(addFavorite(itemSeries));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(first_air_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n        } else {\n            const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n            dispatch(addFavorite(itemMovie));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(release_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n        }\n    }\n\n    const setVoteAverage = () => {\n        if (!vote_average) {\n            if (known_for) {\n                if (known_for[0]) {\n                    return known_for[0].vote_average;\n                }\n            }\n        }\n    }\n\n    const setImage = () => {\n        if ((poster_path === null) || (poster_path === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    if (known_for[0].poster_path !== undefined) {\n                        return `https://image.tmdb.org/t/p/w500${known_for[0].poster_path}`;\n                    } else {\n                        return noPoster;\n                    }\n                } else {\n                    return noPoster;\n                }\n            } else {\n                return noPoster;\n            }\n        } else {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        }\n    }\n\n    const setDescription = () => {\n        if ((overview === null) || (overview === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    const description = known_for[0].overview;\n                    if (description === \"\") {\n                        return 'Sin descripción';\n                    } else {\n                        return description.substr(0, 199);\n                    }\n                } else {\n                    return 'Sin descripción';\n                }\n            } else {\n                return 'Sin descripción';\n            }\n        } else if (overview === \"\") {\n            return 'Sin descripción'\n        } else {\n            return overview.substr(0, 199);\n        }\n    }\n\n    const setDate = () => {\n        if ((release_date === null) || (release_date === undefined) || (release_date === \"\")\n            && ((first_air_date === null) || (first_air_date === undefined) || (first_air_date === \"\"))) {\n            return 'Sin fecha';\n        } else if ((release_date === null) || (release_date === undefined)) {\n            return first_air_date;\n        } else if ((first_air_date === null) || (first_air_date === undefined)) {\n            return release_date;\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n    \n            if (media_type === 'tv') {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n    \n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n     \n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={setImage()} alt={name} />\n\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n\n                <h5 className=\"card-subtitle\">{setVoteAverage()}</h5>\n\n                <p className=\"card-text-release\">{setDate()}</p>\n\n                <p className=\"card-text-genres\">{genres}</p>\n                <p>\n                    {(media_type === 'tv')\n                        ?\n                        'Serie'\n                        :\n                        'Película'\n                    }\n                </p>\n                <p className=\"card-text-overview\">{setDescription()}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={addingFavorite}\n                >\n                    Agregar a favoritos\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchItem;","import React, { useEffect, useState } from 'react';\nimport SearchItem from './SearchItem';\n\nexport const SearchList = ({ results = [] }) => {\n    return (\n        <>\n            {\n                results.map((item, index) => (\n                    <SearchItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_MOVIES } from '../fetch/urls';\nimport { getAllMovies } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport MoviesList from './MoviesList';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\n\nconst Movies = () => {\n\n    const [movies, setMovies] = useState([]);\n\n    const [filtered] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalMovieResults, setTotalMovieResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [moviesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: moviesList } = useSelector(state => state.movies);\n\n    const { moviesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { moviesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        setMovies(moviesList);\n        setGenders(gendersList);\n        setYears(moviesYears);\n        settingTotalMovieResults();\n    }, [moviesList, gendersList, moviesYears]);\n\n    const filterByGender = async (e) => {\n        const selectedGender = e.target.value;\n        const allMovies = await getAllMovies();\n        filtered.length = 0;\n\n        if (selectedGender === 'Seleccione...') {\n            setMovies(moviesList);\n            setTotalMovieResults(moviesList.length);\n        } else {\n            for (const movie of allMovies) {\n                const genders = movie.genre_ids;\n                for (const gender of genders) {\n                    if (Number(selectedGender) === gender) {\n                        filtered.push(movie);\n                    }\n                }\n            }\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const filterByYear = async (e) => {\n        const selectedYear = e.target.value;\n        const allMovies = await getAllMovies();\n        filtered.length = 0;\n\n        if (selectedYear === 'Seleccione...') {\n            setMovies(moviesList);\n            setTotalMovieResults(moviesList.length);\n        } else {\n            for (const movie of allMovies) {\n                if (movie.release_date) {\n                    const releaseYear = movie.release_date.substring(0, 4);\n                    if (selectedYear === releaseYear) {\n                        filtered.push(movie);\n                    }\n                }\n            }\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalMovieResults = async () => {\n        const next = await axios.get(GET_MOVIES);\n        const data = await next.data.total_pages;\n        setTotalMovieResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_MOVIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setMovies(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalMovieResults / moviesPerPage);\n    const last = currentPage * moviesPerPage;\n    const first = last - moviesPerPage;\n    const currentMovies = (filtered.length !== 0) ? filtered.slice(first, last) : movies;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        {(filtered.length !== 0)\n                            ?\n                            <MoviesList movies={currentMovies} />\n                            :\n                            <MoviesList movies={movies} />\n                        }\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalMovieResults >= moviesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n\n        </>\n    )\n}\n\nexport default Movies;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport favorite from '../assets/favorite.png';\nimport noPoster from '../assets/no-poster.jpeg';\nimport { getGenresSeries } from '../helpers/genres';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst SerieItem = ({ id, poster_path, name, overview, vote_average, genre_ids, first_air_date, video }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresSeries(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n \n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n \n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n        dispatch(addFavorite(itemSeries));\n        dispatch(addGenres(genre_ids));\n        dispatch(addYears(first_air_date.substring(0, 4)));\n        Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                {poster_path\n                    ?\n                    <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                    :\n                    <img src={noPoster} alt={name} />\n                }\n                <h5 className=\"card-title\">{name}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{first_air_date}</p>\n                {(genres === \"\")\n                    ?\n                    <p className=\"card-text-genres\">{\"Sin género\"}</p>\n                    :\n                    <p className=\"card-text-genres\">{genres}</p>\n                }\n                {(overview === \"\")\n                    ?\n                    <p className=\"card-text-overview\">{\"Sin descripción\"}</p>\n                    :\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                }\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={addingFavorite}\n                >\n                    Agregar a favoritos\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SerieItem;","import React from 'react';\nimport SerieItem from './SerieItem';\n\nconst SeriesList = ({ series = [] }) => {\n    return (\n        <>\n            {(series.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay series</h3>\n                :\n                series.map((item, index) => (\n                    <SerieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default SeriesList;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_SERIES } from '../fetch/urls';\nimport { getAllSeries } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\nimport SeriesList from './SeriesList';\n\nconst Series = () => {\n\n    const [series, setSeries] = useState([]);\n\n    const [filtered] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalSeriesResults, setTotalSeriesResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [seriesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: seriesList } = useSelector(state => state.series);\n\n    const { seriesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { seriesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        setSeries(seriesList);\n        setGenders(gendersList);\n        setYears(seriesYears);\n        settingTotalSeriesResults();\n    }, [seriesList, gendersList, seriesYears]);\n\n    const filterByGender = async (e) => {\n        const selectedGender = e.target.value;\n        const allSeries = await getAllSeries();\n        filtered.length = 0;\n        \n        if (selectedGender === 'Seleccione...') {\n            setSeries(seriesList);\n            setTotalSeriesResults(seriesList.length);\n        } else {\n            for (const serie of allSeries) {\n                const genders = serie.genre_ids;\n                for (const gender of genders) {\n                    if (Number(selectedGender) === gender) {\n                        filtered.push(serie);\n                    }\n                }\n            }\n            setSeries(filtered);\n            setTotalSeriesResults(filtered.length);\n        }\n    }\n\n    const filterByYear = async (e) => {\n        const selectedYear = e.target.value;\n        const allSeries = await getAllSeries();\n        filtered.length = 0;\n\n        if (selectedYear === 'Seleccione...') {\n            setSeries(seriesList);\n            setTotalSeriesResults(seriesList.length);\n        } else {\n            for (const serie of allSeries) {\n                if (serie.first_air_date) {\n                    const releaseYear = serie.first_air_date.substring(0, 4);\n                    if (selectedYear === releaseYear) {\n                        filtered.push(serie);\n                    }\n                }\n            }\n            setSeries(filtered);\n            setTotalSeriesResults(filtered.length);\n        }\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalSeriesResults = async () => {\n        const next = await axios.get(GET_SERIES);\n        const data = await next.data.total_pages;\n        setTotalSeriesResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_SERIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setSeries(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalSeriesResults / seriesPerPage);\n    const last = currentPage * seriesPerPage;\n    const first = last - seriesPerPage;\n    const currentSeries = (filtered.length !== 0) ? filtered.slice(first, last) : series;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        {(filtered.length !== 0)\n                            ?\n                            <SeriesList series={currentSeries} />\n                            :\n                            <SeriesList series={series} />\n                        }\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalSeriesResults >= seriesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n        </>\n    )\n}\n\nexport default Series;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpeg';\n\nconst Header = () => {\n    return (\n        <header className=\"container-fluid bg-white\">\n            <div className=\"content\">\n                <img id=\"logo\" src={logo} alt=\"Logo\" />\n                <h1 id=\"title\">Showapp</h1>\n            </div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Películas\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/series\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Series\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/favorites\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Favoritos\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { deleteFavorite } from '../redux/actions/favorites';\nimport favorite from '../assets/favorite.png';\nimport { getGenresMovies, getGenresSeries } from '../helpers/genres';\nimport axios from 'axios';\n\nconst FavoriteItem = ({ id, poster_path, title, name, overview, vote_average, genre_ids, first_air_date, release_date, media_type }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [dispatch, genre_ids]);\n\n    const settingGenres = async () => {\n        let genresMovie, genresSerie;\n        genresMovie = await getGenresMovies(genre_ids);\n        genresSerie = await getGenresSeries(genre_ids);\n\n        if (title) {\n            setGenres(genresMovie);\n        } else {\n            setGenres(genresSerie);\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n\n            if (name) {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n\n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    const removeFavorite = () => {\n        dispatch(deleteFavorite(id));\n        Swal.fire('Borrado', 'Elemento eliminado de favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                {first_air_date &&\n                    <p className=\"card-text-release\">{first_air_date}</p>\n                }\n                {release_date &&\n                    <p className=\"card-text-release\">{release_date}</p>\n                }\n                <p className=\"card-text-genres\">{genres}</p>\n                {overview\n                    ?\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                    :\n                    <p className=\"card-text-overview\">Sin descripción</p>\n                }\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={removeFavorite}\n                >\n                    Eliminar favorito\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteItem;","import React from 'react';\nimport FavoriteItem from './FavoriteItem';\n\nconst FavoritesList = ({ favorites = [] }) => {\n    return (\n        <>\n            {(favorites.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay items marcado como favoritos todavía</h3>\n                :\n                favorites.map((item, index) => (\n                    <FavoriteItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n\nexport default FavoritesList;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { genresList, settingGenresList } from '../helpers/genres';\n\nimport { getFavorites } from '../redux/actions/favorites';\nimport { getSeriesYears } from '../redux/actions/years';\nimport FavoritesList from './FavoritesList';\nimport { Labels } from './Labels';\n\nconst Favorites = () => {\n\n    const dispatch = useDispatch();\n\n    const [favorites, setFavorites] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const { allYears } = useSelector(state => state.years);\n\n    const { allGenres: gendersList } = useSelector(state => state.genders);\n\n    const { data: favoritesList } = useSelector(state => state.favorites);\n\n    useEffect(() => {\n        setYears(allYears);\n        settingGenres();\n        setFavorites(favoritesList);\n    }, [dispatch, gendersList]);\n\n    const settingGenres = async () => {\n        const genres = await settingGenresList(gendersList);\n        setGenders(genres);\n    }\n\n    const filterByGender = (e) => {\n        const selectedGender = e.target.value;\n        let filtered = [];\n\n        for (const item of favoritesList) {\n            const genders = item.genre_ids;\n            for (const gender of genders) {\n                if (Number(selectedGender) === gender) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedGender === 'Seleccione...') {\n            filtered = favoritesList;\n        }\n\n        setFavorites(filtered);\n    }\n\n    const filterByYear = (e) => {\n        const selectedYear = e.target.value;\n        let filtered = [];\n\n        for (const item of favoritesList) {\n            if (item.release_date) {\n                const releaseYear = item.release_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(item);\n                }\n            } else {\n                const releaseYear = item.first_air_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedYear === 'Seleccione...') {\n            filtered = favoritesList;\n        }\n\n        setFavorites(filtered);\n    }\n\n    return (\n        <>\n            <Labels />\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboYear\"\n                        name=\"year\"\n                        className=\"selects\"\n                        onChange={filterByYear}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {years.map((year, index) => (\n                            <option key={index} value={year}>\n                                {year}\n                            </option>\n                        ))\n                        }\n                    </select>\n                </div>\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboGenre\"\n                        name=\"gender\"\n                        className=\"selects\"\n                        onChange={filterByGender}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {genders.map(({ id, name }, index) => (\n                            <option key={index} value={id}>\n                                {name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            <FavoritesList favorites={favorites} />\n        </>\n    )\n}\n\nexport default Favorites;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Movies from '../components/Movies';\nimport Series from '../components/Series';\nimport Header from '../components/Header';\nimport Favorites from '../components/Favorites';\n\nconst MainRouter = () => {\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={Movies}\n                />\n                <Route\n                    exact path=\"/series\"\n                    component={Series}\n                />\n                <Route\n                    exact path=\"/favorites\"\n                    component={Favorites}\n                />\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default MainRouter;","import axios from 'axios';\nimport { GET_MOVIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_MOVIES);\n            const movies = await resp.data.results;\n            dispatch(loadingMovies(movies));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingMovies = (movies) => ({\n    type: types.moviesRead,\n    payload: movies\n});","import axios from 'axios';\nimport { GET_SERIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_SERIES);\n            const series = await resp.data.results;\n            dispatch(loadingSeries(series));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingSeries = (series) => ({\n    type: types.seriesRead,\n    payload: series\n});","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport MainRouter from '../routes/MainRouter';\nimport { getMovies } from '../redux/actions/movies';\nimport { getAllGenres, getGendersMovies, getGendersSeries } from '../redux/actions/genders';\nimport { getSeries } from '../redux/actions/series';\nimport { getFavorites } from '../redux/actions/favorites';\nimport { getAllYears, getMoviesYears, getSeriesYears } from '../redux/actions/years';\n\nconst Main = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getMovies());\n        dispatch(getSeries());\n        dispatch(getGendersMovies());\n        dispatch(getGendersSeries());\n        dispatch(getAllGenres());\n        dispatch(getAllYears());\n        dispatch(getFavorites());\n        dispatch(getMoviesYears());\n        dispatch(getSeriesYears());\n    }, [dispatch]);\n\n    return (\n        <MainRouter />\n    )\n}\n\nexport default Main;","import { types } from '../../types/types';\n\nconst initialState = {\n    data: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.favoritesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        case types.favoritesAdd:\n            return {\n                ...state,\n                data: [...state.data, payload]\n            }\n        \n        case types.favoritesDelete:\n            return {\n                ...state,\n                data: state.data.filter(\n                    e => e.id !== payload\n                )\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { moviesGenres: [], seriesGenres: [], allGenres: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesGenresRead:\n            return {\n                ...state,\n                moviesGenres: [...payload]\n            }\n\n        case types.seriesGenresRead:\n            return {\n                ...state,\n                seriesGenres: [...payload]\n            }\n        \n        case types.addGenre: {\n            return {\n                ...state,\n                allGenres: [...state.allGenres, payload]\n            }\n        }\n\n        case types.allGenresRead:\n            return {\n                ...state,\n                allGenres: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.moviesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.seriesRead:\n        return {\n            ...state,\n            data: [...payload]\n        }\n\n    default:\n        return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { moviesYears: [], seriesYears: [], allYears: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesYearsRead:\n            return {\n                ...state,\n                moviesYears: [...payload]\n            }\n        case types.seriesYearsRead:\n            return {\n                ...state,\n                seriesYears: [...payload]\n            }\n\n        case types.allYearsRead:\n            return {\n                ...state,\n                allYears: [...payload]\n            }\n\n        case types.addYear: {\n            return {\n                ...state,\n                allYears: [...state.allYears, payload]\n            }\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport FavoritesReducer from './FavoritesReducer';\nimport GenderReducer from './GenderReducer';\nimport MovieReducer from './MovieReducer';\nimport SeriesReducer from './SeriesReducer';\nimport YearsReducer from './YearsReducer';\n\nexport const rootReducer = combineReducers({\n    movies: MovieReducer,\n    series: SeriesReducer,\n    genders: GenderReducer,\n    years: YearsReducer,\n    favorites: FavoritesReducer\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { Provider } from 'react-redux';\nimport './App.scss';\nimport Main from './components/Main';\nimport { store } from './redux/store/store';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"app\">\n                <Main />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoviedbwebpack\"] = self[\"webpackChunkmoviedbwebpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [71], function() { return __webpack_require__(6047); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","GET_MOVIES","GET_GENRES_MOVIES","GET_GENRES_SERIES","GET_SERIES","getAllMovies","allMovies","axios","resp","data","total_pages","i","response","results","movies","movie","push","getAllSeries","allSeries","series","serie","searchItems","criteria","Labels","className","id","htmlFor","getGenresMovies","genres","body","genders","length","j","idGender","name","join","getGenresSeries","settingGenresList","allGenres","sort","uniqueGenres","filter","v","a","indexOf","allGenresList","item","element","genre","k","firstGenre","secondGenre","uniques","findIndex","t","genresList","types","loadingFavorites","favorites","type","payload","addFavorite","favorite","dispatch","favoriteAddNew","error","console","favoriteDeleting","loadingGendersMovies","loadingGendersSeries","addGenres","addingGenres","log","loadingAllGenders","getYearsMovies","years","year","release_date","undefined","onlyYear","substring","reverse","getYearsSeries","first_air_date","gettingAllYears","loadingYearsMovies","loadingYearsSeries","addYears","addingYears","loadingAllYears","poster_path","title","overview","vote_average","genre_ids","useDispatch","useState","setGenres","useEffect","settingGenres","getVideo","url","result","find","site","Swal","html","key","src","alt","substr","onClick","map","index","pages","nextPage","currentPage","pageLinks","href","media_type","known_for","noPoster","setVoteAverage","description","setDescription","SearchList","setMovies","filtered","setGenders","setYears","totalResults","setTotalResults","totalMovieResults","setTotalMovieResults","setCurrentPage","moviesPerPage","setResults","moviesList","useSelector","state","gendersList","moviesGenres","moviesYears","settingTotalMovieResults","filterByGender","e","selectedGender","target","value","gender","Number","filterByYear","selectedYear","releaseYear","getSearch","values","total_results","next","pageNumber","numberPages","Math","floor","last","first","currentMovies","slice","placeholder","onChange","defaultValue","style","clear","video","setSeries","totalSeriesResults","setTotalSeriesResults","seriesPerPage","seriesList","seriesGenres","seriesYears","settingTotalSeriesResults","currentSeries","logo","to","textDecoration","genresMovie","genresSerie","deleteFavorite","setFavorites","allYears","favoritesList","exact","path","component","Movies","Series","Favorites","loadingMovies","loadingSeries","getState","initialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}