{"version":3,"file":"bundle.981aadb7453e955a895e.js","mappings":"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","sources":["webpack://moviedbwebpack/webpack/runtime/chunk loaded","webpack://moviedbwebpack/./src/App.scss?f8ad","webpack://moviedbwebpack/./src/fetch/urls.js","webpack://moviedbwebpack/./src/helpers/fetchData.js","webpack://moviedbwebpack/./src/helpers/search.js","webpack://moviedbwebpack/./src/components/Labels.js","webpack://moviedbwebpack/./src/helpers/genres.js","webpack://moviedbwebpack/./src/types/types.js","webpack://moviedbwebpack/./src/redux/actions/favorites.js","webpack://moviedbwebpack/./src/redux/actions/genders.js","webpack://moviedbwebpack/./src/helpers/years.js","webpack://moviedbwebpack/./src/redux/actions/years.js","webpack://moviedbwebpack/./src/components/MovieItem.js","webpack://moviedbwebpack/./src/components/MoviesList.js","webpack://moviedbwebpack/./src/components/Pagination.js","webpack://moviedbwebpack/./src/components/SearchItem.js","webpack://moviedbwebpack/./src/components/SearchList.js","webpack://moviedbwebpack/./src/components/Movies.js","webpack://moviedbwebpack/./src/components/SerieItem.js","webpack://moviedbwebpack/./src/components/SeriesList.js","webpack://moviedbwebpack/./src/components/Series.js","webpack://moviedbwebpack/./src/components/Header.js","webpack://moviedbwebpack/./src/components/FavoriteItem.js","webpack://moviedbwebpack/./src/components/FavoritesList.js","webpack://moviedbwebpack/./src/components/Favorites.js","webpack://moviedbwebpack/./src/routes/MainRouter.js","webpack://moviedbwebpack/./src/redux/actions/movies.js","webpack://moviedbwebpack/./src/redux/actions/series.js","webpack://moviedbwebpack/./src/components/Main.js","webpack://moviedbwebpack/./src/redux/reducers/GenderReducer.js","webpack://moviedbwebpack/./src/redux/reducers/MovieReducer.js","webpack://moviedbwebpack/./src/redux/reducers/SeriesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/YearsReducer.js","webpack://moviedbwebpack/./src/redux/reducers/rootReducer.js","webpack://moviedbwebpack/./src/redux/store/store.js","webpack://moviedbwebpack/./src/App.js","webpack://moviedbwebpack/./src/index.js","webpack://moviedbwebpack/./src/App.scss?52cd","webpack://moviedbwebpack/webpack/bootstrap","webpack://moviedbwebpack/webpack/runtime/compat get default export","webpack://moviedbwebpack/webpack/runtime/define property getters","webpack://moviedbwebpack/webpack/runtime/global","webpack://moviedbwebpack/webpack/runtime/hasOwnProperty shorthand","webpack://moviedbwebpack/webpack/runtime/publicPath","webpack://moviedbwebpack/webpack/runtime/jsonp chunk loading","webpack://moviedbwebpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\nexport const GET_MOVIES = 'https://api.themoviedb.org/3/movie/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_MOVIES = 'https://api.themoviedb.org/3/genre/movie/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES_SERIES = 'https://api.themoviedb.org/3/genre/tv/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SERIES = 'https://api.themoviedb.org/3/tv/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SEARCH = 'https://api.themoviedb.org/3/search/multi?api_key=cc0b90931467ae243564a690969b3b99&language=es&include_adult=false&query=';","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getAllMovies = async () => {\n    let allMovies = [];\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            allMovies.push(movie);\n        }\n    }\n    return allMovies;\n}\n\nexport const getAllSeries = async () => {\n    let allSeries = [];\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            allSeries.push(serie);\n        }\n    }\n    return allSeries;\n}","import axios from 'axios';\nimport { GET_SEARCH } from '../fetch/urls';\n\nexport const searchItems = async (criteria) => {\n    const resp = await axios.get(GET_SEARCH + criteria);\n    const results = await resp.data;\n    return results;\n}","import React from 'react';\n\nexport const Labels = () => {\n    return (\n        <>\n            <h4>Descubra nuevas películas y programas de televisión</h4>\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <label id=\"labelYear\" className=\"labels\" htmlFor=\"comboYear\">\n                        Año\n                    </label>\n                </div>\n                <div className=\"column-2\">\n                    <label id=\"labelGender\" className=\"labels\" htmlFor=\"comboGenre\">\n                        Género\n                    </label>\n                </div>\n            </div>\n        </>\n    )\n}\n","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../fetch/urls';\n\nexport const getGenresMovies = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const getGenresSeries = async (genres = []) => {\n    const response = await axios.get(GET_GENRES_SERIES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const settingGenresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k]);\n            }\n        }\n    }\n\n    genders.sort((firstGenre, secondGenre) => { return (firstGenre.name > secondGenre.name) ? 1 : (firstGenre.name < secondGenre.name) ? -1 : 0 });\n\n    const uniques = genders.filter((v, i, a) => a.findIndex(t => (t.id === v.id)) === i);\n\n    return uniques;\n}\n\nexport const genresList = async (allGenres = []) => {\n    allGenres.sort();\n    const uniqueGenres = allGenres.filter((v, i, a) => a.indexOf(v) === i);\n\n    const response = await axios.get(GET_GENRES_MOVIES);\n    const movies = await response.data.genres;\n\n    const resp = await axios.get(GET_GENRES_SERIES);\n    const series = await resp.data.genres;\n\n    let genders = [], allGenresList = [];\n\n    for (let i = 0; i < uniqueGenres.length; i++) {\n        const item = uniqueGenres[i];\n        for (let i = 0; i < item.length; i++) {\n            const element = item[i];\n            allGenresList.push(element);\n        }\n    }\n\n    for (const genre of allGenresList) {\n        for (const movie of movies) {\n            const idGender = movie.id;\n            if (genre === idGender) {\n                genders.push(movie.name);\n            }\n        }\n        for (let k = 0; k < series.length; k++) {\n            const idGender = series[k].id;\n            if (genre === idGender) {\n                genders.push(series[k].name);\n            }\n        }\n    }\n\n    genders.sort();\n\n    const uniques = genders.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}","\nexport const types = {\n    moviesRead: '[Movies] Read movies',\n    seriesRead: '[Series] Read series',\n    addGenre: '[All] Add genre',\n    allGenresRead: '[All] Read all genres',\n    moviesGenresRead: '[Movies] Read movies genres',\n    seriesGenresRead: '[Series] Read series genres',\n    addYear: '[All] Add year',\n    allYearsRead: '[All] Read all years',\n    moviesYearsRead: '[Years] Read Movies years',\n    seriesYearsRead: '[Years] Read Series years'\n}","import { types } from '../../types/types';\n\nexport const getFavorites = () => {\n    return async () => {\n        try {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n            localStorage.setItem('favorites', JSON.stringify(localFavorites));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const addFavorite = (favorite) => {\n    return async () => {\n        try {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n            const addingLocalFavorite = [...localFavorites, favorite];\n            localStorage.setItem('favorites', JSON.stringify(addingLocalFavorite));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nexport const deleteFavorite = (id) => {\n    return async () => {\n        try {\n            const localFavoritesToDelete = JSON.parse(localStorage.getItem('favorites'));\n            const deleted = localFavoritesToDelete.filter(fav => fav.id !== id);\n            localStorage.setItem('favorites', JSON.stringify(deleted));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}","import axios from 'axios';\nimport { GET_GENRES_MOVIES, GET_GENRES_SERIES } from '../../fetch/urls';\nimport { genresList } from '../../helpers/genres';\nimport { types } from '../../types/types';\n\nexport const getGendersMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_MOVIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersMovies(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersMovies = (genders) => ({\n    type: types.moviesGenresRead,\n    payload: genders\n});\n\nexport const getGendersSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES_SERIES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGendersSeries(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGendersSeries = (genders) => ({\n    type: types.seriesGenresRead,\n    payload: genders\n});\n\nexport const addGenres = (genres) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingGenres(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingGenres = (genres) => ({\n    type: types.addGenre,\n    payload: genres\n});\n\nexport const getAllGenres = () => {\n    return async (dispatch, getState) => {\n        const { genders } = getState();\n        try {\n            const genres = await genresList(genders.allGenres);\n\n            dispatch(loadingAllGenders(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllGenders = (genders) => ({\n    type: types.allGenresRead,\n    payload: genders\n});","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nexport const getYearsMovies = async () => {\n    const resp = await axios.get(GET_MOVIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_MOVIES + `&page=${i}`);\n        const movies = await response.data.results;\n        for (const movie of movies) {\n            const year = movie.release_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getYearsSeries = async () => {\n    const resp = await axios.get(GET_SERIES);\n    const total_pages = await resp.data.total_pages;\n\n    let years = [];\n    for (let i = 1; i <= total_pages; i++) {\n        const response = await axios.get(GET_SERIES + `&page=${i}`);\n        const series = await response.data.results;\n        for (const serie of series) {\n            const year = serie.first_air_date;\n            if (year || year !== undefined) {\n                const onlyYear = year.substring(0, 4);\n                years.push(onlyYear);\n            }\n        }\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const gettingAllYears = (years = []) => {\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}","import { gettingAllYears, getYearsMovies, getYearsSeries } from '../../helpers/years';\nimport { types } from '../../types/types';\n\nexport const getMoviesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsMovies();\n            dispatch(loadingYearsMovies(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsMovies = (years) => ({\n    type: types.moviesYearsRead,\n    payload: years\n});\n\nexport const getSeriesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsSeries();\n            dispatch(loadingYearsSeries(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsSeries = (years) => ({\n    type: types.seriesYearsRead,\n    payload: years\n});\n\nexport const addYears = (years) => {\n    return async (dispatch) => {\n        try {\n            dispatch(addingYears(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst addingYears = (years) => ({\n    type: types.addYear,\n    payload: years\n});\n\nexport const getAllYears = () => {\n    return async (dispatch, getState) => {\n        const { years } = getState();\n        try {\n            const genres = await gettingAllYears(years.allYears);\n\n            dispatch(loadingAllYears(genres));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingAllYears = (years) => ({\n    type: types.allYearsRead,\n    payload: years\n});","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nimport { getGenresMovies } from '../helpers/genres';\nimport favorite from '../assets/favorite.png';\nimport favoriteMarked from '../assets/favorite-marked.png';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst MovieItem = ({ id, poster_path, title, overview, vote_average, genre_ids, release_date }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresMovies(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n        \n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n        \n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n        const favorites = JSON.parse(localStorage.getItem('favorites'));\n        const marked = favorites.find(favorite => favorite.id === id);\n        if (marked) {\n            Swal.fire('Lo sentimos', 'Esta película ya fue agregada a favoritos', 'info');\n        } else {\n            dispatch(addFavorite(itemMovie));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(release_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n        }\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={title} />\n                <h5 className=\"card-title\">{title}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{release_date}</p>\n                <p className=\"card-text-genres\">{genres}</p>\n                <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                    onClick={addingFavorite}\n                >\n                    {(marked === undefined)\n                        ?\n                        \"Agregar a favoritos\"\n                        :\n                        \"Agregado a favoritos\"\n                    }\n                    <img src={(marked === undefined) ? favorite : favoriteMarked} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieItem;","import React from 'react';\nimport MovieItem from './MovieItem';\n\nconst MoviesList = ({ movies = [] }) => {\n    return (\n        <>\n            {(movies.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay películas</h3>\n                :\n                movies.map((item, index) => (\n                    <MovieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default MoviesList;","import React from 'react';\n\nconst Pagination = ({ pages, nextPage, currentPage }) => {\n\n    const pageLinks = [];\n\n    for (let i = 1; i <= pages + 1; i++) {\n        pageLinks.push(<li key={i} onClick={() => nextPage(i)}><a href=\"\">{i}</a></li>);\n    }\n\n    return (\n        <div className=\"container-pages\">\n            <ul className=\"pagination\">\n                {(currentPage > 1)\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage - 1)}>Anterior</li>\n                    :\n                    <></>\n                }\n\n                {(currentPage < (pages + 1))\n                    ?\n                    <li className=\"pages\" onClick={() => nextPage(currentPage + 1)}>Siguiente</li>\n                    :\n                    <></>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Pagination;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport favorite from '../assets/favorite.png';\nimport favoriteMarked from '../assets/favorite-marked.png';\nimport noPoster from '../assets/no-poster.jpeg';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { settingGenresList } from '../helpers/genres';\nimport { addYears } from '../redux/actions/years';\n\nconst SearchItem = ({ id, poster_path, name, title, overview, vote_average, genre_ids, first_air_date, release_date, media_type, known_for }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await settingGenresList(genre_ids);\n        setGenres(resp);\n    }\n\n    const addingFavorite = () => {\n        if (media_type === 'tv') {\n            const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n            dispatch(addFavorite(itemSeries));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(first_air_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n        } else {\n            const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n            dispatch(addFavorite(itemMovie));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(release_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n        }\n    }\n\n    const setVoteAverage = () => {\n        if (!vote_average) {\n            if (known_for) {\n                if (known_for[0]) {\n                    return known_for[0].vote_average;\n                }\n            }\n        }\n    }\n\n    const setImage = () => {\n        if ((poster_path === null) || (poster_path === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    if (known_for[0].poster_path !== undefined) {\n                        return `https://image.tmdb.org/t/p/w500${known_for[0].poster_path}`;\n                    } else {\n                        return noPoster;\n                    }\n                } else {\n                    return noPoster;\n                }\n            } else {\n                return noPoster;\n            }\n        } else {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        }\n    }\n\n    const setDescription = () => {\n        if ((overview === null) || (overview === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    const description = known_for[0].overview;\n                    if (description === \"\") {\n                        return 'Sin descripción';\n                    } else {\n                        return description.substr(0, 199);\n                    }\n                } else {\n                    return 'Sin descripción';\n                }\n            } else {\n                return 'Sin descripción';\n            }\n        } else if (overview === \"\") {\n            return 'Sin descripción'\n        } else {\n            return overview.substr(0, 199);\n        }\n    }\n\n    const setDate = () => {\n        if ((release_date === null) || (release_date === undefined) || (release_date === \"\")\n            && ((first_air_date === null) || (first_air_date === undefined) || (first_air_date === \"\"))) {\n            return 'Sin fecha';\n        } else if ((release_date === null) || (release_date === undefined)) {\n            return first_air_date;\n        } else if ((first_air_date === null) || (first_air_date === undefined)) {\n            return release_date;\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n    \n            if (media_type === 'tv') {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n    \n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n     \n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={setImage()} alt={name} />\n\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n\n                <h5 className=\"card-subtitle\">{setVoteAverage()}</h5>\n\n                <p className=\"card-text-release\">{setDate()}</p>\n\n                <p className=\"card-text-genres\">{genres}</p>\n                <p>\n                    {(media_type === 'tv')\n                        ?\n                        'Serie'\n                        :\n                        'Película'\n                    }\n                </p>\n                <p className=\"card-text-overview\">{setDescription()}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                    onClick={addingFavorite}\n                >\n                    {(marked === undefined)\n                        ?\n                        \"Agregar a favoritos\"\n                        :\n                        \"Agregado a favoritos\"\n                    }\n                    <img src={(marked === undefined) ? favorite : favoriteMarked} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchItem;","import React, { useEffect, useState } from 'react';\nimport SearchItem from './SearchItem';\n\nexport const SearchList = ({ results = [] }) => {\n    return (\n        <div className=\"items\">\n            {\n                results.map((item, index) => (\n                    <SearchItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_MOVIES } from '../fetch/urls';\nimport { getAllMovies } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport MoviesList from './MoviesList';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\n\nconst Movies = () => {\n\n    const [movies, setMovies] = useState([]);\n\n    const [filtered] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalMovieResults, setTotalMovieResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [moviesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: moviesList } = useSelector(state => state.movies);\n\n    const { moviesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { moviesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        setMovies(moviesList);\n        setGenders(gendersList);\n        setYears(moviesYears);\n        settingTotalMovieResults();\n    }, [moviesList, gendersList, moviesYears]);\n\n    const filterByGender = async (e) => {\n        const selectedGender = e.target.value;\n        const allMovies = await getAllMovies();\n        filtered.length = 0;\n\n        if (selectedGender === 'Seleccione...') {\n            setMovies(moviesList);\n            setTotalMovieResults(moviesList.length);\n        } else {\n            for (const movie of allMovies) {\n                const genders = movie.genre_ids;\n                for (const gender of genders) {\n                    if (Number(selectedGender) === gender) {\n                        filtered.push(movie);\n                    }\n                }\n            }\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const filterByYear = async (e) => {\n        const selectedYear = e.target.value;\n        const allMovies = await getAllMovies();\n        filtered.length = 0;\n\n        if (selectedYear === 'Seleccione...') {\n            setMovies(moviesList);\n            setTotalMovieResults(moviesList.length);\n        } else {\n            for (const movie of allMovies) {\n                if (movie.release_date) {\n                    const releaseYear = movie.release_date.substring(0, 4);\n                    if (selectedYear === releaseYear) {\n                        filtered.push(movie);\n                    }\n                }\n            }\n            setMovies(filtered);\n            setTotalMovieResults(filtered.length);\n        }\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalMovieResults = async () => {\n        const next = await axios.get(GET_MOVIES);\n        const data = await next.data.total_pages;\n        setTotalMovieResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_MOVIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setMovies(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalMovieResults / moviesPerPage);\n    const last = currentPage * moviesPerPage;\n    const first = last - moviesPerPage;\n    const currentMovies = (filtered.length !== 0) ? filtered.slice(first, last) : movies;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"items\">\n                            {(filtered.length !== 0)\n                                ?\n                                <MoviesList movies={currentMovies} />\n                                :\n                                <MoviesList movies={movies} />\n                            }\n                        </div>\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalMovieResults >= moviesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n\n        </>\n    )\n}\n\nexport default Movies;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport favorite from '../assets/favorite.png';\nimport favoriteMarked from '../assets/favorite-marked.png';\nimport noPoster from '../assets/no-poster.jpeg';\nimport { getGenresSeries } from '../helpers/genres';\nimport { addFavorite } from '../redux/actions/favorites';\nimport { addGenres } from '../redux/actions/genders';\nimport { addYears } from '../redux/actions/years';\n\nconst SerieItem = ({ id, poster_path, name, overview, vote_average, genre_ids, first_air_date }) => {\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n    const marked = favorites.find(favorite => favorite.id === id);\n\n    useEffect(() => {\n        settingGenres();\n    }, [genre_ids]);\n\n    const settingGenres = async () => {\n        const resp = await getGenresSeries(genre_ids);\n        setGenres(resp);\n    }\n\n    const getVideo = async () => {\n        const url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n\n        const response = await axios.get(url);\n        const results = await response.data.results;\n        const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n        if (result) {\n            Swal.fire({\n                title: 'Trailer',\n                html:\n                    `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n            });\n        } else {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n        }\n    }\n\n    const addingFavorite = () => {\n        const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n        if (marked) {\n            Swal.fire('Lo sentimos', 'Esta película ya fue agregada a favoritos', 'error');\n        } else {\n            dispatch(addFavorite(itemSeries));\n            dispatch(addGenres(genre_ids));\n            dispatch(addYears(first_air_date.substring(0, 4)));\n            Swal.fire('Éxito', 'Serie agregada a favoritos', 'success');\n        }\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                {poster_path\n                    ?\n                    <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                    :\n                    <img src={noPoster} alt={name} />\n                }\n                <h5 className=\"card-title\">{name}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{first_air_date}</p>\n                {(genres === \"\")\n                    ?\n                    <p className=\"card-text-genres\">{\"Sin género\"}</p>\n                    :\n                    <p className=\"card-text-genres\">{genres}</p>\n                }\n                {(overview === \"\")\n                    ?\n                    <p className=\"card-text-overview\">{\"Sin descripción\"}</p>\n                    :\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                }\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className={(marked === undefined) ? \"button-favorite\" : \"marked\"}\n                    onClick={addingFavorite}\n                >\n                    {(marked === undefined)\n                        ?\n                        \"Agregar a favoritos\"\n                        :\n                        \"Agregado a favoritos\"\n                    }\n                    <img src={(marked === undefined) ? favorite : favoriteMarked} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SerieItem;","import React from 'react';\nimport SerieItem from './SerieItem';\n\nconst SeriesList = ({ series = [] }) => {\n    return (\n        <>\n            {(series.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay series</h3>\n                :\n                series.map((item, index) => (\n                    <SerieItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport default SeriesList;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { GET_SERIES } from '../fetch/urls';\nimport { getAllSeries } from '../helpers/fetchData';\nimport { searchItems } from '../helpers/search';\nimport { Labels } from './Labels';\nimport Pagination from './Pagination';\nimport { SearchList } from './SearchList';\nimport SeriesList from './SeriesList';\n\nconst Series = () => {\n\n    const [series, setSeries] = useState([]);\n\n    const [filtered] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [totalSeriesResults, setTotalSeriesResults] = useState(0);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [seriesPerPage] = useState(20);\n\n    const [results, setResults] = useState([]);\n\n    const { data: seriesList } = useSelector(state => state.series);\n\n    const { seriesGenres: gendersList } = useSelector(state => state.genders);\n\n    const { seriesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        setSeries(seriesList);\n        setGenders(gendersList);\n        setYears(seriesYears);\n        settingTotalSeriesResults();\n    }, [seriesList, gendersList, seriesYears]);\n\n    const filterByGender = async (e) => {\n        const selectedGender = e.target.value;\n        const allSeries = await getAllSeries();\n        filtered.length = 0;\n\n        if (selectedGender === 'Seleccione...') {\n            setSeries(seriesList);\n            setTotalSeriesResults(seriesList.length);\n        } else {\n            for (const serie of allSeries) {\n                const genders = serie.genre_ids;\n                for (const gender of genders) {\n                    if (Number(selectedGender) === gender) {\n                        filtered.push(serie);\n                    }\n                }\n            }\n            setSeries(filtered);\n            setTotalSeriesResults(filtered.length);\n        }\n    }\n\n    const filterByYear = async (e) => {\n        const selectedYear = e.target.value;\n        const allSeries = await getAllSeries();\n        filtered.length = 0;\n\n        if (selectedYear === 'Seleccione...') {\n            setSeries(seriesList);\n            setTotalSeriesResults(seriesList.length);\n        } else {\n            for (const serie of allSeries) {\n                if (serie.first_air_date) {\n                    const releaseYear = serie.first_air_date.substring(0, 4);\n                    if (selectedYear === releaseYear) {\n                        filtered.push(serie);\n                    }\n                }\n            }\n            setSeries(filtered);\n            setTotalSeriesResults(filtered.length);\n        }\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    const settingTotalSeriesResults = async () => {\n        const next = await axios.get(GET_SERIES);\n        const data = await next.data.total_pages;\n        setTotalSeriesResults(data);\n    }\n\n    const nextPage = async (pageNumber) => {\n        const next = await axios.get(GET_SERIES + `&page=${pageNumber}`);\n        const data = await next.data.results;\n        setSeries(data);\n        setCurrentPage(pageNumber);\n    }\n\n    const numberPages = Math.floor(totalSeriesResults / seriesPerPage);\n    const last = currentPage * seriesPerPage;\n    const first = last - seriesPerPage;\n    const currentSeries = (filtered.length !== 0) ? filtered.slice(first, last) : series;\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"items\">\n                            {(filtered.length !== 0)\n                                ?\n                                <SeriesList series={currentSeries} />\n                                :\n                                <SeriesList series={series} />\n                            }\n                        </div>\n                        <div style={{ clear: 'both' }}></div>\n                        {(totalSeriesResults >= seriesPerPage) &&\n                            <Pagination\n                                pages={numberPages}\n                                nextPage={nextPage}\n                                currentPage={currentPage}\n                            />\n                        }\n                    </>\n            }\n        </>\n    )\n}\n\nexport default Series;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpeg';\n\nconst Header = () => {\n    return (\n        <header className=\"container-fluid bg-white\">\n            <div className=\"content\">\n                <img id=\"logo\" src={logo} alt=\"Logo\" />\n                <h1 id=\"title\">Showapp</h1>\n            </div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Películas\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/series\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Series\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/favorites\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Favoritos\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { deleteFavorite } from '../redux/actions/favorites';\nimport favorite from '../assets/favorite.png';\nimport { getGenresMovies, getGenresSeries } from '../helpers/genres';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst FavoriteItem = ({ id, poster_path, title, name, overview, vote_average, genre_ids, first_air_date, release_date, media_type }) => {\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        settingGenres();\n    }, [dispatch, genre_ids]);\n\n    const settingGenres = async () => {\n        let genresMovie, genresSerie;\n        genresMovie = await getGenresMovies(genre_ids);\n        genresSerie = await getGenresSeries(genre_ids);\n\n        if (title) {\n            setGenres(genresMovie);\n        } else {\n            setGenres(genresSerie);\n        }\n    }\n\n    const getVideo = async () => {\n        try {\n            let url = '';\n\n            if (name) {\n                url = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            } else {\n                url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=cc0b90931467ae243564a690969b3b99&language=es`;\n            }\n\n            const response = await axios.get(url);\n            const results = await response.data.results;\n            const result = results.find(result => result.type === \"Trailer\" && result.site === \"YouTube\");\n\n            if (result) {\n                Swal.fire({\n                    title: 'Trailer',\n                    html:\n                        `<iframe width=\"470\" height=\"315\" src=\"https://www.youtube.com/embed/${result.key}\" frameborder=\"0\" allowfullscreen></iframe>`\n                });\n            } else {\n                if (media_type === 'tv') {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n                } else {\n                    Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n                }\n            }\n        } catch (error) {\n            if (media_type === 'tv') {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n            } else {\n                Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n            }\n        }\n    }\n\n    const removeFavorite = () => {\n        dispatch(deleteFavorite(id));\n        history.replace('/');\n        Swal.fire('Borrado', 'Elemento eliminado de favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                {first_air_date &&\n                    <p className=\"card-text-release\">{first_air_date}</p>\n                }\n                {release_date &&\n                    <p className=\"card-text-release\">{release_date}</p>\n                }\n                <p className=\"card-text-genres\">{genres}</p>\n                {overview\n                    ?\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                    :\n                    <p className=\"card-text-overview\">Sin descripción</p>\n                }\n                <button\n                    className=\"button-trailer\"\n                    onClick={getVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={removeFavorite}\n                >\n                    Eliminar favorito\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteItem;","import React from 'react';\nimport FavoriteItem from './FavoriteItem';\n\nconst FavoritesList = ({ favorites = [] }) => {\n    return (\n        <>\n            {\n                favorites.map((item, index) => (\n                    <FavoriteItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n\nexport default FavoritesList;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { settingGenresList } from '../helpers/genres';\n\nimport FavoritesList from './FavoritesList';\nimport { Labels } from './Labels';\n\nconst Favorites = () => {\n\n    const dispatch = useDispatch();\n\n    const [favorites, setFavorites] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const { allYears } = useSelector(state => state.years);\n\n    const { allGenres: gendersList } = useSelector(state => state.genders);\n\n    const localFavorites = JSON.parse(localStorage.getItem('favorites'));\n\n    useEffect(() => {\n        if (localFavorites === null) {\n            setFavorites([]);\n        } else {\n            setFavorites(localFavorites);\n        }\n    }, []);\n\n    useEffect(() => {\n        setYears(allYears);\n        settingGenres();\n    }, [dispatch, gendersList]);\n\n    const settingGenres = async () => {\n        const genres = await settingGenresList(gendersList);\n        setGenders(genres);\n    }\n\n    const filterByGender = (e) => {\n        const selectedGender = e.target.value;\n        let filtered = [];\n\n        for (const item of favoritesStorage) {\n            const genders = item.genre_ids;\n            for (const gender of genders) {\n                if (Number(selectedGender) === gender) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedGender === 'Seleccione...') {\n            filtered = favoritesStorage;\n        }\n\n        setFavorites(filtered);\n    }\n\n    const filterByYear = (e) => {\n        const selectedYear = e.target.value;\n        let filtered = [];\n\n        for (const item of favoritesStorage) {\n            if (item.release_date) {\n                const releaseYear = item.release_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(item);\n                }\n            } else {\n                const releaseYear = item.first_air_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedYear === 'Seleccione...') {\n            filtered = favoritesStorage;\n        }\n\n        setFavorites(filtered);\n    }\n\n    return (\n        <>\n            <Labels />\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboYear\"\n                        name=\"year\"\n                        className=\"selects\"\n                        onChange={filterByYear}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {years.map((year, index) => (\n                            <option key={index} value={year}>\n                                {year}\n                            </option>\n                        ))\n                        }\n                    </select>\n                </div>\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboGenre\"\n                        name=\"gender\"\n                        className=\"selects\"\n                        onChange={filterByGender}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {genders.map(({ id, name }, index) => (\n                            <option key={index} value={id}>\n                                {name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            {(favorites.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay items marcado como favoritos todavía</h3>\n                :\n                <div className=\"items\">\n                    <FavoritesList favorites={favorites} />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Favorites;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Movies from '../components/Movies';\nimport Series from '../components/Series';\nimport Header from '../components/Header';\nimport Favorites from '../components/Favorites';\n\nconst MainRouter = () => {\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={Movies}\n                />\n                <Route\n                    exact path=\"/series\"\n                    component={Series}\n                />\n                <Route\n                    exact path=\"/favorites\"\n                    component={Favorites}\n                />\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default MainRouter;","import axios from 'axios';\nimport { GET_MOVIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_MOVIES);\n            const movies = await resp.data.results;\n            dispatch(loadingMovies(movies));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingMovies = (movies) => ({\n    type: types.moviesRead,\n    payload: movies\n});","import axios from 'axios';\nimport { GET_SERIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_SERIES);\n            const series = await resp.data.results;\n            dispatch(loadingSeries(series));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingSeries = (series) => ({\n    type: types.seriesRead,\n    payload: series\n});","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport MainRouter from '../routes/MainRouter';\nimport { getMovies } from '../redux/actions/movies';\nimport { getAllGenres, getGendersMovies, getGendersSeries } from '../redux/actions/genders';\nimport { getSeries } from '../redux/actions/series';\nimport { getFavorites } from '../redux/actions/favorites';\nimport { getAllYears, getMoviesYears, getSeriesYears } from '../redux/actions/years';\n\nconst Main = () => {\n\n    localStorage.setItem('favorites', JSON.stringify([]));\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getMovies());\n        dispatch(getSeries());\n        dispatch(getGendersMovies());\n        dispatch(getGendersSeries());\n        dispatch(getAllGenres());\n        dispatch(getAllYears());\n        dispatch(getFavorites());\n        dispatch(getMoviesYears());\n        dispatch(getSeriesYears());\n    }, [dispatch]);\n\n    return (\n        <MainRouter />\n    )\n}\n\nexport default Main;","import { types } from '../../types/types';\n\nconst initialState = { moviesGenres: [], seriesGenres: [], allGenres: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesGenresRead:\n            return {\n                ...state,\n                moviesGenres: [...payload]\n            }\n\n        case types.seriesGenresRead:\n            return {\n                ...state,\n                seriesGenres: [...payload]\n            }\n        \n        case types.addGenre: {\n            return {\n                ...state,\n                allGenres: [...state.allGenres, payload]\n            }\n        }\n\n        case types.allGenresRead:\n            return {\n                ...state,\n                allGenres: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.moviesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.seriesRead:\n        return {\n            ...state,\n            data: [...payload]\n        }\n\n    default:\n        return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { moviesYears: [], seriesYears: [], allYears: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.moviesYearsRead:\n            return {\n                ...state,\n                moviesYears: [...payload]\n            }\n        case types.seriesYearsRead:\n            return {\n                ...state,\n                seriesYears: [...payload]\n            }\n\n        case types.allYearsRead:\n            return {\n                ...state,\n                allYears: [...payload]\n            }\n\n        case types.addYear: {\n            return {\n                ...state,\n                allYears: [...state.allYears, payload]\n            }\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport GenderReducer from './GenderReducer';\nimport MovieReducer from './MovieReducer';\nimport SeriesReducer from './SeriesReducer';\nimport YearsReducer from './YearsReducer';\n\nexport const rootReducer = combineReducers({\n    movies: MovieReducer,\n    series: SeriesReducer,\n    genders: GenderReducer,\n    years: YearsReducer\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { Provider } from 'react-redux';\nimport './App.scss';\nimport Main from './components/Main';\nimport { store } from './redux/store/store';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"app\">\n                <Main />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoviedbwebpack\"] = self[\"webpackChunkmoviedbwebpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [594], function() { return __webpack_require__(4590); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","GET_MOVIES","GET_GENRES_MOVIES","GET_GENRES_SERIES","GET_SERIES","getAllMovies","allMovies","axios","resp","data","total_pages","i","response","results","movies","movie","push","getAllSeries","allSeries","series","serie","searchItems","criteria","Labels","className","id","htmlFor","getGenresMovies","genres","body","genders","length","j","idGender","name","join","getGenresSeries","settingGenresList","allGenres","sort","uniqueGenres","filter","v","a","indexOf","allGenresList","item","element","genre","k","firstGenre","secondGenre","uniques","findIndex","t","genresList","types","addFavorite","favorite","localFavorites","JSON","parse","localStorage","getItem","addingLocalFavorite","setItem","stringify","error","console","loadingGendersMovies","type","payload","loadingGendersSeries","addGenres","dispatch","addingGenres","log","loadingAllGenders","getYearsMovies","years","year","release_date","undefined","onlyYear","substring","reverse","getYearsSeries","first_air_date","gettingAllYears","loadingYearsMovies","loadingYearsSeries","addYears","addingYears","loadingAllYears","poster_path","title","overview","vote_average","genre_ids","useDispatch","useState","setGenres","marked","find","useEffect","settingGenres","getVideo","url","result","site","Swal","html","key","src","alt","substr","onClick","itemMovie","favoriteMarked","map","index","pages","nextPage","currentPage","pageLinks","href","media_type","known_for","noPoster","setVoteAverage","description","setDescription","SearchList","setMovies","filtered","setGenders","setYears","totalResults","setTotalResults","totalMovieResults","setTotalMovieResults","setCurrentPage","moviesPerPage","setResults","moviesList","useSelector","state","gendersList","moviesGenres","moviesYears","settingTotalMovieResults","filterByGender","e","selectedGender","target","value","gender","Number","filterByYear","selectedYear","releaseYear","getSearch","values","total_results","next","pageNumber","numberPages","Math","floor","last","first","currentMovies","slice","placeholder","onChange","defaultValue","style","clear","itemSeries","setSeries","totalSeriesResults","setTotalSeriesResults","seriesPerPage","seriesList","seriesGenres","seriesYears","settingTotalSeriesResults","currentSeries","logo","to","textDecoration","history","useHistory","genresMovie","genresSerie","localFavoritesToDelete","deleted","fav","deleteFavorite","replace","favorites","setFavorites","allYears","favoritesStorage","exact","path","component","Movies","Series","Favorites","loadingMovies","loadingSeries","getState","initialState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}