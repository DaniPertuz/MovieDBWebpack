{"version":3,"file":"bundle.ef006db178379dd87cbf.js","mappings":"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","sources":["webpack://moviedbwebpack/webpack/runtime/chunk loaded","webpack://moviedbwebpack/./src/App.scss?f8ad","webpack://moviedbwebpack/./src/fetch/urls.js","webpack://moviedbwebpack/./src/types/types.js","webpack://moviedbwebpack/./src/redux/actions/movies.js","webpack://moviedbwebpack/./src/helpers/genres.js","webpack://moviedbwebpack/./src/redux/actions/genders.js","webpack://moviedbwebpack/./src/redux/actions/series.js","webpack://moviedbwebpack/./src/helpers/search.js","webpack://moviedbwebpack/./src/helpers/years.js","webpack://moviedbwebpack/./src/redux/actions/years.js","webpack://moviedbwebpack/./src/components/Labels.js","webpack://moviedbwebpack/./src/components/MovieItem.js","webpack://moviedbwebpack/./src/components/SearchItem.js","webpack://moviedbwebpack/./src/components/SearchList.js","webpack://moviedbwebpack/./src/components/Movies.js","webpack://moviedbwebpack/./src/components/SerieItem.js","webpack://moviedbwebpack/./src/components/Series.js","webpack://moviedbwebpack/./src/components/Header.js","webpack://moviedbwebpack/./src/redux/actions/favorites.js","webpack://moviedbwebpack/./src/components/FavoriteItem.js","webpack://moviedbwebpack/./src/components/Favorites.js","webpack://moviedbwebpack/./src/routes/MainRouter.js","webpack://moviedbwebpack/./src/components/Main.js","webpack://moviedbwebpack/./src/redux/reducers/FavoritesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/GenderReducer.js","webpack://moviedbwebpack/./src/redux/reducers/MovieReducer.js","webpack://moviedbwebpack/./src/redux/reducers/SeriesReducer.js","webpack://moviedbwebpack/./src/redux/reducers/YearsReducer.js","webpack://moviedbwebpack/./src/redux/reducers/rootReducer.js","webpack://moviedbwebpack/./src/redux/store/store.js","webpack://moviedbwebpack/./src/App.js","webpack://moviedbwebpack/./src/index.js","webpack://moviedbwebpack/./src/App.scss?52cd","webpack://moviedbwebpack/webpack/bootstrap","webpack://moviedbwebpack/webpack/runtime/compat get default export","webpack://moviedbwebpack/webpack/runtime/define property getters","webpack://moviedbwebpack/webpack/runtime/global","webpack://moviedbwebpack/webpack/runtime/hasOwnProperty shorthand","webpack://moviedbwebpack/webpack/runtime/publicPath","webpack://moviedbwebpack/webpack/runtime/jsonp chunk loading","webpack://moviedbwebpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\nexport const GET_MOVIES = 'https://api.themoviedb.org/3/movie/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SERIES = 'https://api.themoviedb.org/3/tv/popular?api_key=cc0b90931467ae243564a690969b3b99&language=es';\n\nexport const GET_SEARCH = 'https://api.themoviedb.org/3/search/multi?api_key=cc0b90931467ae243564a690969b3b99&language=es&include_adult=false&query=';","\nexport const types = {\n    moviesRead: '[Movies] Read movies',\n    seriesRead: '[Series] Read series',\n    favoritesRead: '[Favorites] Read favorites',\n    favoritesAdd: '[Favorites] Add favorites',\n    gendersRead: '[Favorites] Read genders',\n    moviesYearsRead: '[Years] Read Movies years',\n    seriesYearsRead: '[Years] Read Series years'\n}","import axios from 'axios';\nimport { GET_MOVIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getMovies = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_MOVIES);\n            const movies = await resp.data.results;\n            dispatch(loadingMovies(movies));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingMovies = (movies) => ({\n    type: types.moviesRead,\n    payload: movies\n});","import axios from 'axios';\nimport { GET_GENRES } from '../fetch/urls';\n\nexport const getGenres = async (genres = []) => {\n    const response = await axios.get(GET_GENRES);\n    const body = await response.data.genres;\n    let genders = [];\n\n    for (let i = 0; i < genres.length; i++) {\n        const id = genres[i];\n        for (let j = 0; j < body.length; j++) {\n            const idGender = body[j].id;\n            if (id === idGender) {\n                genders.push(body[j].name);\n            }\n        }\n    }\n\n    return genders.join(', ');\n}\n\nexport const genresList = async () => {\n    const response = await axios.get(GET_GENRES);\n\n    return await response.data.genres;\n}","import axios from 'axios';\nimport { GET_GENRES } from '../../fetch/urls';\nimport { getGenres } from '../../helpers/genres';\nimport { types } from '../../types/types';\n\nexport const getGenders = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_GENRES);\n            const genders = await resp.data.genres;\n\n            dispatch(loadingGenders(genders));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingGenders = (genders) => ({\n    type: types.gendersRead,\n    payload: genders\n});","import axios from 'axios';\nimport { GET_SERIES } from '../../fetch/urls';\nimport { types } from '../../types/types';\n\nexport const getSeries = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await axios.get(GET_SERIES);\n            const series = await resp.data.results;\n            dispatch(loadingSeries(series));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingSeries = (series) => ({\n    type: types.seriesRead,\n    payload: series\n});","import axios from 'axios';\nimport { GET_SEARCH } from '../fetch/urls';\n\nexport const searchItems = async (criteria) => {\n    const resp = await axios.get(GET_SEARCH + criteria);\n    const results = await resp.data;\n    return results;\n}","import axios from 'axios';\nimport { GET_MOVIES, GET_SERIES } from '../fetch/urls';\n\nlet allYears = [];\n\nexport const getYearsMovies = async () => {\n    const resp = await axios.get(GET_MOVIES);\n    const movies = await resp.data.results;\n\n    let years = [];\n\n    for (const movie of movies) {\n        const year = movie.release_date;\n        years.push(year.substring(0, 4));\n        allYears.push(year.substring(0, 4));\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getYearsSeries = async () => {\n    const resp = await axios.get(GET_SERIES);\n    const series = await resp.data.results;\n\n    let years = [];\n\n    for (const serie of series) {\n        const year = serie.first_air_date;\n        years.push(year.substring(0, 4));\n        allYears.push(year.substring(0, 4));\n    }\n\n    years.sort();\n    years.reverse();\n\n    const uniques = years.filter((v, i, a) => a.indexOf(v) === i);\n\n    return uniques;\n}\n\nexport const getYearsAll = async () => {\n    return allYears.filter((v, i, a) => a.indexOf(v) === i);\n}","import { getYearsMovies, getYearsSeries } from '../../helpers/years';\nimport { types } from '../../types/types';\n\nexport const getMoviesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsMovies();\n            dispatch(loadingYearsMovies(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsMovies = (years) => ({\n    type: types.moviesYearsRead,\n    payload: years\n});\n\nexport const getSeriesYears = () => {\n    return async (dispatch) => {\n        try {\n            const years = await getYearsSeries();\n            dispatch(loadingYearsSeries(years));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingYearsSeries = (years) => ({\n    type: types.seriesYearsRead,\n    payload: years\n});","import React from 'react';\n\nexport const Labels = () => {\n    return (\n        <>\n            <h4>Descubra nuevas películas y programas de televisión</h4>\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <label id=\"labelYear\" className=\"labels\" htmlFor=\"comboYear\">\n                        Año\n                    </label>\n                </div>\n                <div className=\"column-2\">\n                    <label id=\"labelGender\" className=\"labels\" htmlFor=\"comboGenre\">\n                        Género\n                    </label>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { getGenres } from '../helpers/genres';\nimport favorite from '../assets/favorite.png';\n\nconst MovieItem = ({ id, poster_path, title, overview, vote_average, genre_ids, release_date, video }) => {\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        getGenres(genre_ids)\n            .then(data => setGenres(data));\n    }, []);\n\n    const isVideo = () => {\n        if (!video) {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    const addFavorite = () => {\n        const itemMovie = { id, poster_path, title, overview, vote_average, genre_ids, release_date };\n\n        window.$favorites = [...window.$favorites, itemMovie];\n\n        Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={title} />\n                <h5 className=\"card-title\">{title}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{release_date}</p>\n                <p className=\"card-text-genres\">{genres}</p>\n                <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                    <button\n                        className=\"button-trailer\"\n                        onClick={isVideo}\n                    >\n                        Ver trailer\n                    </button>\n                    <button\n                        className=\"button-favorite\"\n                        onClick={addFavorite}\n                    >\n                        Agregar a favoritos\n                        <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                    </button>\n                <div className=\"container-buttons\">\n                    <div className=\"column-6\">\n                    </div>\n                    <div className=\"column-6\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieItem;","import React, { useEffect, useState } from 'react';\nimport { getGenres } from '../helpers/genres';\nimport Swal from 'sweetalert2';\n\nimport noPoster from '../assets/no-poster.jpeg';\n\nconst SearchItem = ({ poster_path, name, title, overview, vote_average, genre_ids, first_air_date, release_date, media_type, known_for }) => {\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        getGenres(genre_ids)\n            .then(data => setGenres(data));\n    }, []);\n\n    const addFavorite = () => {\n        const favorites = JSON.parse(localStorage.getItem('favorites'));\n\n        const item = { poster_path, name, overview, vote_average, genre_ids, first_air_date };\n\n        localStorage.setItem('favorites', JSON.stringify([...favorites, item]));\n    }\n\n    const setVoteAverage = () => {\n        if (!vote_average) {\n            if (known_for) {\n                if (known_for[0]) {\n                    return known_for[0].vote_average;\n                }\n            }\n        }\n    }\n\n    const setImage = () => {\n        if ((poster_path === null) || (poster_path === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    if (known_for[0].poster_path !== undefined) {\n                        return `https://image.tmdb.org/t/p/w500${known_for[0].poster_path}`;\n                    } else {\n                        return noPoster;\n                    }\n                } else {\n                    return noPoster;\n                }\n            } else {\n                return noPoster;\n            }\n        } else {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n        }\n    }\n\n    const setDescription = () => {\n        if ((overview === null) || (overview === undefined)) {\n            if (known_for) {\n                if (known_for[0]) {\n                    const description = known_for[0].overview;\n                    if (description === \"\") {\n                        return 'Sin descripción';\n                    } else {\n                        return description.substr(0, 199);\n                    }\n                } else {\n                    return 'Sin descripción';\n                }\n            } else {\n                return 'Sin descripción';\n            }\n        } else if (overview === \"\") {\n            return 'Sin descripción'\n        } else {\n            return overview.substr(0, 199);\n        }\n    }\n\n    const setDate = () => {\n        if ((release_date === null) || (release_date === undefined) || (release_date === \"\")\n            && ((first_air_date === null) || (first_air_date === undefined) || (first_air_date === \"\"))) {\n            return 'Sin fecha';\n        } else if ((release_date === null) || (release_date === undefined)) {\n            return first_air_date;\n        } else if ((first_air_date === null) || (first_air_date === undefined)) {\n            return release_date;\n        }\n    }\n\n    const isVideo = () => {\n        Swal.fire('Lo sentimos', 'No hay tráiler para esta serie', 'warning');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={setImage()} alt={name} />\n\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n\n                <h5 className=\"card-subtitle\">{setVoteAverage()}</h5>\n\n                <p className=\"card-text\">{setDate()}</p>\n\n                <p className=\"card-text\">{genres}</p>\n                <p className=\"card-text\">\n                    {(media_type === 'tv')\n                        ?\n                        'Película'\n                        :\n                        'Serie'\n                    }\n                </p>\n                <p className=\"card-text-overview\">{setDescription()}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={isVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={addFavorite}\n                >\n                    Agregar a favoritos\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchItem;","import React, { useEffect, useState } from 'react';\nimport SearchItem from './SearchItem';\n\nexport const SearchList = ({ results = [] }) => {\n    return (\n        <>\n            {\n                results.map((item, index) => (\n                    <SearchItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchItems } from '../helpers/search';\nimport { getMovies } from '../redux/actions/movies';\nimport { getMoviesYears } from '../redux/actions/years';\nimport { Labels } from './Labels';\nimport MovieItem from './MovieItem';\nimport { SearchList } from './SearchList';\n\nconst Movies = () => {\n\n    const dispatch = useDispatch();\n\n    const [movies, setMovies] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    const { data: moviesList } = useSelector(state => state.movies);\n\n    const { data: gendersList } = useSelector(state => state.genders);\n\n    const { moviesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        dispatch(getMoviesYears());\n        setMovies(moviesList);\n        setGenders(gendersList);\n        setYears(moviesYears);\n    }, [dispatch, moviesList, gendersList]);\n\n    const filterByGender = (e) => {\n        const selectedGender = e.target.value;\n        let filtered = [];\n\n        for (const movie of movies) {\n            const genders = movie.genre_ids;\n            for (const gender of genders) {\n                if (Number(selectedGender) === gender) {\n                    filtered.push(movie);\n                }\n            }\n        }\n\n        if (selectedGender === 'Seleccione...') {\n            filtered = moviesList;\n        }\n\n        setMovies(filtered);\n    }\n\n    const filterByYear = (e) => {\n        const selectedYear = e.target.value;\n        let filtered = [];\n\n        for (const movie of movies) {\n            if (movie.release_date) {\n                const releaseYear = movie.release_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(movie);\n                }\n            }\n        }\n\n        if (selectedYear === 'Seleccione...') {\n            filtered = moviesList;\n        }\n\n        setMovies(filtered);\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        {movies.map((item, index) => (\n                            <MovieItem\n                                key={index}\n                                {...item}\n                            />\n                        ))}\n                    </>\n            }\n\n        </>\n    )\n}\n\nexport default Movies;","import React, { useEffect, useState } from 'react';\nimport Swal from 'sweetalert2';\nimport favorite from '../assets/favorite.png';\n\nimport { getGenres } from '../helpers/genres';\n\nconst SerieItem = ({ id, poster_path, name, overview, vote_average, genre_ids, first_air_date, video }) => {\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        getGenres(genre_ids)\n            .then(data => setGenres(data));\n    }, []);\n\n    const isVideo = () => {\n        if (!video) {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    const addFavorite = () => {\n        const itemSeries = { id, poster_path, name, overview, vote_average, genre_ids, first_air_date };\n\n        window.$favorites = [...window.$favorites, itemSeries];\n\n        Swal.fire('Éxito', 'Película agregada a favoritos', 'success');\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                <h5 className=\"card-title\">{name}</h5>\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                <p className=\"card-text-release\">{first_air_date}</p>\n                {(genres === \"\")\n                ?\n                <p className=\"card-text-genres\">{\"Sin género\"}</p>\n                :\n                <p className=\"card-text-genres\">{genres}</p>\n            }\n                {(overview === \"\")\n                    ?\n                    <p className=\"card-text-overview\">{\"Sin descripción\"}</p>\n                    :\n                    <p className=\"card-text-overview\">{overview.length > 200 ? overview.substr(0, 199) + '...' : overview}</p>\n                }\n                <button\n                    className=\"button-trailer\"\n                    onClick={isVideo}\n                >\n                    Ver trailer\n                </button>\n                <button\n                    className=\"button-favorite\"\n                    onClick={addFavorite}\n                >\n                    Agregar a favoritos\n                    <img src={favorite} alt=\"favorite\" className=\"favIcon\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SerieItem;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { searchItems } from '../helpers/search';\nimport { getSeriesYears } from '../redux/actions/years';\nimport { Labels } from './Labels';\nimport { SearchList } from './SearchList';\nimport SerieItem from './SerieItem';\n\nconst Series = () => {\n\n    const dispatch = useDispatch();\n\n    const [series, setSeries] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [totalResults, setTotalResults] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    const { data: seriesList } = useSelector(state => state.series);\n\n    const { data: gendersList } = useSelector(state => state.genders);\n\n    const { seriesYears } = useSelector(state => state.years);\n\n    useEffect(() => {\n        dispatch(getSeriesYears());\n        setSeries(seriesList);\n        setGenders(gendersList);\n        setYears(seriesYears);\n    }, [dispatch, seriesList, gendersList]);\n\n    const filterByGender = (e) => {\n        const selectedGender = e.target.value;\n        let filtered = [];\n\n        for (const serie of seriesList) {\n            const genders = serie.genre_ids;\n            for (const gender of genders) {\n                if (Number(selectedGender) === gender) {\n                    filtered.push(serie);\n                }\n            }\n        }\n\n        if (selectedGender === 'Seleccione...') {\n            filtered = seriesList;\n        }\n\n        setSeries(filtered);\n    }\n\n    const filterByYear = (e) => {\n        const selectedYear = e.target.value;\n        let filtered = [];\n\n        for (const serie of seriesList) {\n            if (serie.first_air_date) {\n                const releaseYear = serie.first_air_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(serie);\n                }\n            }\n        }\n\n        if (selectedYear === 'Seleccione...') {\n            filtered = seriesList;\n        }\n\n        setSeries(filtered);\n    }\n\n    const getSearch = async (e) => {\n        const values = e.target.value;\n\n        if (values !== '') {\n            const resp = await searchItems(values);\n            setTotalResults(resp.total_results);\n            setResults(resp.results);\n        } else {\n            setTotalResults('');\n            setResults([]);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Buscar película, serie o video\"\n                    onChange={getSearch}\n                />\n            </div>\n            {((totalResults > 0) && (totalResults !== ''))\n                ?\n                <SearchList results={results} />\n                :\n                (totalResults === 0)\n                    ?\n                    <h3 className=\"text-center\">No hay items...</h3>\n                    :\n                    <>\n                        <Labels />\n                        <div className=\"rowManual\">\n                            <div className=\"column-2\">\n                                <select\n                                    id=\"comboYear\"\n                                    name=\"year\"\n                                    className=\"selects\"\n                                    onChange={filterByYear}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>\n                                            {year}\n                                        </option>\n                                    ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"column-2\">\n                            <select\n                                    id=\"comboGenre\"\n                                    name=\"gender\"\n                                    className=\"selects\"\n                                    onChange={filterByGender}\n                                >\n                                    <option\n                                        defaultValue>\n                                        Seleccione...\n                                    </option>\n                                    {genders.map(({ id, name }, index) => (\n                                        <option key={index} value={id}>\n                                            {name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        {series.map((item, index) => (\n                            <SerieItem\n                                key={index}\n                                {...item}\n                            />\n                        ))}\n                    </>\n            }\n        </>\n    )\n}\n\nexport default Series;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpeg';\n\nconst Header = () => {\n    return (\n        <header className=\"container-fluid bg-white\">\n            <div className=\"content\">\n                <img id=\"logo\" src={logo} alt=\"Logo\" />\n                <h1 id=\"title\">Showapp</h1>\n            </div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Películas\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/series\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Series\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/favorites\" style={{ textDecoration: 'none' }}>\n                            <button className=\"links\">\n                                Favoritos\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import { types } from '../../types/types';\n\nexport const getFavorites = (favorites) => {\n    return async (dispatch) => {\n        try {\n            dispatch(loadingFavorites(favorites));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst loadingFavorites = (favorites) => ({\n    type: types.favoritesRead,\n    payload: favorites\n});\n\nexport const addFavorite = (favorite) => {\n    return async (dispatch) => {\n        try {\n            dispatch(favoriteAddNew(favorite));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst favoriteAddNew = (favorite) => ({\n    type: types.favoritesAdd,\n    payload: favorite\n});","import React, { useEffect, useState } from 'react';\nimport { getGenres } from '../helpers/genres';\nimport Swal from 'sweetalert2';\n\nconst FavoriteItem = ({ poster_path, title, name, overview, vote_average, genre_ids, first_air_date, release_date }) => {\n\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        getGenres(genre_ids)\n            .then(data => setGenres(data));\n    }, []);\n\n    const isVideo = () => {\n        if (!video) {\n            Swal.fire('Lo sentimos', 'No hay tráiler para esta película', 'warning');\n        }\n    }\n\n    return (\n        <div className=\"container-card\">\n            <div className=\"card\">\n                <img src={\"https://image.tmdb.org/t/p/w500\" + poster_path} alt={name} />\n                {name &&\n                    <h5 className=\"card-title\">{name}</h5>\n                }\n                {title &&\n                    <h5 className=\"card-title\">{title}</h5>\n                }\n                <h5 className=\"card-subtitle\">{vote_average}</h5>\n                {first_air_date &&\n                    <p className=\"card-text-release\">{first_air_date}</p>\n                }\n                {release_date &&\n                    <p className=\"card-text-release\">{release_date}</p>\n                }\n                <p className=\"card-text-genres\">{genres}</p>\n                <p className=\"card-text-overview\">{overview}</p>\n                <button\n                    className=\"button-trailer\"\n                    onClick={isVideo}\n                >\n                    Ver trailer\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default FavoriteItem;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFavorites } from '../redux/actions/favorites';\nimport { getSeriesYears } from '../redux/actions/years';\nimport FavoriteItem from './FavoriteItem';\nimport { Labels } from './Labels';\n\nconst Favorites = () => {\n\n    const dispatch = useDispatch();\n\n    const [favorites, setFavorites] = useState([]);\n\n    const [years, setYears] = useState([]);\n\n    const [genders, setGenders] = useState([]);\n\n    const { seriesYears } = useSelector(state => state.years);\n\n    const { data: gendersList } = useSelector(state => state.genders);\n\n    useEffect(() => {\n        dispatch(getSeriesYears());\n        setYears(seriesYears);\n        setGenders(gendersList);\n        dispatch(getFavorites(window.$favorites));\n        setFavorites(window.$favorites);\n    }, []);\n\n    const filterByGender = (e) => {\n        const selectedGender = e.target.value;\n        let filtered = [];\n\n        for (const item of window.$favorites) {\n            const genders = item.genre_ids;\n            for (const gender of genders) {\n                if (Number(selectedGender) === gender) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedGender === 'Seleccione...') {\n            filtered = window.$favorites;\n        }\n\n        setFavorites(filtered);\n    }\n\n    const filterByYear = (e) => {\n        const selectedYear = e.target.value;\n        let filtered = [];\n\n        for (const item of window.$favorites) {\n            if (item.release_date) {\n                const releaseYear = item.release_date.substring(0, 4);\n                if (selectedYear === releaseYear) {\n                    filtered.push(item);\n                }\n            }\n        }\n\n        if (selectedYear === 'Seleccione...') {\n            filtered = window.$favorites;\n        }\n\n        setFavorites(filtered);\n    }\n\n    return (\n        <>\n            <Labels />\n            <div className=\"rowManual\">\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboYear\"\n                        name=\"year\"\n                        className=\"selects\"\n                        onChange={filterByYear}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {years.map((year, index) => (\n                            <option key={index} value={year}>\n                                {year}\n                            </option>\n                        ))\n                        }\n                    </select>\n                </div>\n                <div className=\"column-2\">\n                    <select\n                        id=\"comboGenre\"\n                        name=\"gender\"\n                        className=\"selects\"\n                        onChange={filterByGender}\n                    >\n                        <option\n                            defaultValue>\n                            Seleccione...\n                        </option>\n                        {genders.map(({ id, name }, index) => (\n                            <option key={index} value={id}>\n                                {name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            {(favorites.length === 0)\n                ?\n                <h3 className=\"text-center\">No hay items marcado como favoritos todavía</h3>\n                :\n                favorites.map((item, index) => (\n                    <FavoriteItem\n                        key={index}\n                        {...item}\n                    />\n                ))\n            }\n        </>\n    )\n}\n\nexport default Favorites;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Movies from '../components/Movies';\nimport Series from '../components/Series';\nimport Header from '../components/Header';\nimport Favorites from '../components/Favorites';\n\nconst MainRouter = () => {\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={Movies}\n                />\n                <Route\n                    exact path=\"/series\"\n                    component={Series}\n                />\n                <Route\n                    exact path=\"/favorites\"\n                    component={Favorites}\n                />\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default MainRouter;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getMovies } from '../redux/actions/movies';\nimport { getGenders } from '../redux/actions/genders';\nimport { getSeries } from '../redux/actions/series';\nimport MainRouter from '../routes/MainRouter';\n\nconst Main = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getMovies());\n        dispatch(getSeries());\n        dispatch(getGenders());\n    }, [dispatch]);\n\n    return (\n        <MainRouter />\n    )\n}\n\nexport default Main;","import { types } from '../../types/types';\n\nconst initialState = {\n    data: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.favoritesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        case types.favoritesAdd:\n            return {\n                ...state,\n                data: [...state.data, payload]\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.gendersRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.moviesRead:\n            return {\n                ...state,\n                data: [...payload]\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { data: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.seriesRead:\n        return {\n            ...state,\n            data: [...payload]\n        }\n\n    default:\n        return state;\n    }\n}","import { types } from '../../types/types';\n\nconst initialState = { moviesYears: [], seriesYears: [] };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case types.moviesYearsRead:\n        return {\n            ...state,\n            moviesYears: [...payload]\n        }\n    case types.seriesYearsRead:\n        return {\n            ...state,\n            seriesYears: [...payload]\n        }\n\n    default:\n        return state;\n    }\n}","import { combineReducers } from 'redux';\nimport FavoritesReducer from './FavoritesReducer';\nimport GenderReducer from './GenderReducer';\nimport MovieReducer from './MovieReducer';\nimport SeriesReducer from './SeriesReducer';\nimport YearsReducer from './YearsReducer';\n\nexport const rootReducer = combineReducers({\n    movies: MovieReducer,\n    series: SeriesReducer,\n    genders: GenderReducer,\n    years: YearsReducer,\n    favorites: FavoritesReducer\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { Provider } from 'react-redux';\nimport './App.scss';\nimport Main from './components/Main';\nimport { store } from './redux/store/store';\n\nfunction App() {\n    window.$favorites = [];\n    return (\n        <Provider store={store}>\n            <div className=\"app\">\n                <Main />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoviedbwebpack\"] = self[\"webpackChunkmoviedbwebpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [653], function() { return __webpack_require__(7799); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","GET_MOVIES","GET_GENRES","GET_SERIES","types","loadingMovies","movies","type","payload","getGenres","genres","axios","response","data","body","genders","i","length","id","j","idGender","push","name","join","loadingGenders","loadingSeries","series","searchItems","criteria","resp","results","allYears","getYearsMovies","years","movie","year","release_date","substring","sort","reverse","uniques","filter","v","a","indexOf","getYearsSeries","serie","first_air_date","loadingYearsMovies","getSeriesYears","dispatch","loadingYearsSeries","console","log","Labels","className","htmlFor","poster_path","title","overview","vote_average","genre_ids","video","useState","setGenres","useEffect","then","src","alt","substr","onClick","Swal","itemMovie","window","$favorites","favorite","media_type","known_for","undefined","noPoster","setVoteAverage","description","setDescription","favorites","JSON","parse","localStorage","getItem","item","setItem","stringify","SearchList","map","index","useDispatch","setMovies","setGenders","setYears","totalResults","setTotalResults","setResults","moviesList","useSelector","state","gendersList","moviesYears","getSearch","e","values","target","value","total_results","placeholder","onChange","selectedYear","filtered","defaultValue","selectedGender","gender","Number","itemSeries","setSeries","seriesList","seriesYears","logo","to","style","textDecoration","loadingFavorites","setFavorites","error","getFavorites","exact","path","component","Movies","Series","Favorites","initialState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}